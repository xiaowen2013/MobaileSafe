android.content.pm.IPackageDataObserver -> android.content.pm.IPackageDataObserver:
    void onRemoveCompleted(java.lang.String,boolean) -> onRemoveCompleted
android.content.pm.IPackageDataObserver$Stub -> android.content.pm.a:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.content.pm.IPackageStatsObserver -> android.content.pm.IPackageStatsObserver:
    void onGetStatsCompleted(android.content.pm.PackageStats,boolean) -> onGetStatsCompleted
android.content.pm.IPackageStatsObserver$Stub -> android.content.pm.b:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    int mSeenPositionMin -> N
    int mSeenPositionMax -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ac:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ae:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.af:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ag:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ah:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ai:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.aj:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ak:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.al:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.am:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
cn.itcase.safe.BaseApplication -> cn.itcase.safe.BaseApplication:
    void onCreate() -> onCreate
cn.itcase.safe.activity.AntiVirusActivity -> cn.itcase.safe.activity.AntiVirusActivity:
    android.widget.TextView mTvName -> a
    cn.itcase.safe.activity.AntiVirusActivity$AsyncTask mTask -> b
    android.content.pm.PackageManager mPm -> c
    java.util.List mData -> d
    cn.itcase.safe.activity.AntiVirusActivity$VirusAdapter mAdapter -> e
    android.widget.ListView mListView -> f
    com.github.lzyzsd.circleprogress.CircleProgress mCirPro -> g
    android.widget.RelativeLayout mRl -> h
    android.widget.LinearLayout mLl -> i
    android.widget.Button mBtn -> j
    int mCountVirus -> k
    android.widget.TextView mTvSaveTitle -> l
    android.widget.LinearLayout mRlIv -> m
    android.widget.ImageView mIvAnima -> n
    void onCreate(android.os.Bundle) -> onCreate
    void startScan() -> a
    void onStart() -> onStart
    void showAnimation() -> b
    android.graphics.Bitmap getBitmap(android.graphics.Bitmap) -> a
    void onPause() -> onPause
    void onClick(android.view.View) -> onClick
    android.widget.RelativeLayout access$0(cn.itcase.safe.activity.AntiVirusActivity) -> a
    android.widget.LinearLayout access$1(cn.itcase.safe.activity.AntiVirusActivity) -> b
    android.widget.LinearLayout access$2(cn.itcase.safe.activity.AntiVirusActivity) -> c
    com.github.lzyzsd.circleprogress.CircleProgress access$3(cn.itcase.safe.activity.AntiVirusActivity) -> d
    void access$4(cn.itcase.safe.activity.AntiVirusActivity,java.util.List) -> a
    android.content.pm.PackageManager access$5(cn.itcase.safe.activity.AntiVirusActivity) -> e
    void access$6(cn.itcase.safe.activity.AntiVirusActivity,int) -> a
    java.util.List access$7(cn.itcase.safe.activity.AntiVirusActivity) -> f
    int access$8(cn.itcase.safe.activity.AntiVirusActivity) -> g
    android.widget.TextView access$9(cn.itcase.safe.activity.AntiVirusActivity) -> h
    cn.itcase.safe.activity.AntiVirusActivity$VirusAdapter access$10(cn.itcase.safe.activity.AntiVirusActivity) -> i
    void access$11(cn.itcase.safe.activity.AntiVirusActivity,cn.itcase.safe.activity.AntiVirusActivity$VirusAdapter) -> a
    android.widget.ListView access$12(cn.itcase.safe.activity.AntiVirusActivity) -> j
    android.widget.TextView access$13(cn.itcase.safe.activity.AntiVirusActivity) -> k
    android.widget.ImageView access$14(cn.itcase.safe.activity.AntiVirusActivity) -> l
    android.graphics.Bitmap access$15(cn.itcase.safe.activity.AntiVirusActivity,android.graphics.Bitmap) -> a
    void access$16(cn.itcase.safe.activity.AntiVirusActivity) -> m
cn.itcase.safe.activity.AntiVirusActivity$AsyncTask -> cn.itcase.safe.activity.a:
    int max -> b
    int process -> c
    boolean isFinsh -> d
    cn.itcase.safe.activity.AntiVirusActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void stop() -> a
    void onProgressUpdate(cn.itcase.safe.domain.VirusInfo[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
cn.itcase.safe.activity.AntiVirusActivity$ViewHolder -> cn.itcase.safe.activity.b:
    android.widget.TextView name -> a
    android.widget.TextView isVirus -> b
    android.widget.ImageView icon -> c
    cn.itcase.safe.activity.AntiVirusActivity this$0 -> d
cn.itcase.safe.activity.AntiVirusActivity$VirusAdapter -> cn.itcase.safe.activity.c:
    cn.itcase.safe.activity.AntiVirusActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cn.itcase.safe.activity.AppLockManagerActivity -> cn.itcase.safe.activity.AppLockManagerActivity:
    java.util.List mDataUnLock -> a
    java.util.List mDataLock -> b
    android.widget.TextView mTitle -> c
    cn.itcase.safe.view.AppLockManagerView mLockChoice -> d
    boolean mFlag -> e
    android.widget.ListView mUnLock -> f
    android.widget.ListView mLock -> g
    cn.itcase.safe.db.AppLockDao mDao -> h
    cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView mUnLockAdapter -> i
    cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView mLockAdapter -> j
    boolean isAnimation -> k
    android.widget.LinearLayout mLoading -> l
    void onCreate(android.os.Bundle) -> onCreate
    boolean access$0(cn.itcase.safe.activity.AppLockManagerActivity) -> a
    java.util.List access$1(cn.itcase.safe.activity.AppLockManagerActivity) -> b
    android.widget.TextView access$2(cn.itcase.safe.activity.AppLockManagerActivity) -> c
    java.util.List access$3(cn.itcase.safe.activity.AppLockManagerActivity) -> d
    boolean access$4(cn.itcase.safe.activity.AppLockManagerActivity) -> e
    void access$5(cn.itcase.safe.activity.AppLockManagerActivity,boolean) -> a
    cn.itcase.safe.db.AppLockDao access$6(cn.itcase.safe.activity.AppLockManagerActivity) -> f
    cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView access$7(cn.itcase.safe.activity.AppLockManagerActivity) -> g
    cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView access$8(cn.itcase.safe.activity.AppLockManagerActivity) -> h
    android.widget.LinearLayout access$9(cn.itcase.safe.activity.AppLockManagerActivity) -> i
    void access$10(cn.itcase.safe.activity.AppLockManagerActivity,cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView) -> a
    android.widget.ListView access$11(cn.itcase.safe.activity.AppLockManagerActivity) -> j
    void access$12(cn.itcase.safe.activity.AppLockManagerActivity,cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView) -> b
    android.widget.ListView access$13(cn.itcase.safe.activity.AppLockManagerActivity) -> k
    void access$14(cn.itcase.safe.activity.AppLockManagerActivity,boolean) -> b
cn.itcase.safe.activity.AppLockManagerActivity$1 -> cn.itcase.safe.activity.d:
    cn.itcase.safe.activity.AppLockManagerActivity this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.itcase.safe.activity.AppLockManagerActivity$2 -> cn.itcase.safe.activity.e:
    cn.itcase.safe.activity.AppLockManagerActivity this$0 -> a
    void onIsLife(boolean) -> a
cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView -> cn.itcase.safe.activity.f:
    cn.itcase.safe.activity.AppLockManagerActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.itcase.safe.activity.AppLockManagerActivity access$0(cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView) -> a
cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView$1 -> cn.itcase.safe.activity.g:
    cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView this$1 -> a
    android.view.View val$view -> b
    void onClick(android.view.View) -> onClick
    cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView access$0(cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView$1) -> a
cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView$1$1 -> cn.itcase.safe.activity.h:
    cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView$1 this$2 -> a
    android.view.View val$view -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView$1$2 -> cn.itcase.safe.activity.i:
    cn.itcase.safe.activity.AppLockManagerActivity$AppLockListView$1 this$2 -> a
    android.view.View val$view -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
cn.itcase.safe.activity.AppLockManagerActivity$ViewHolder -> cn.itcase.safe.activity.j:
    android.widget.ImageView icon -> a
    android.widget.ImageView lock -> b
    android.widget.TextView name -> c
    cn.itcase.safe.activity.AppLockManagerActivity this$0 -> d
cn.itcase.safe.activity.AppManagerActivity -> cn.itcase.safe.activity.AppManagerActivity:
    cn.itcase.safe.view.MyProgress mRom -> a
    cn.itcase.safe.view.MyProgress mSd -> b
    se.emilsjolander.stickylistheaders.StickyListHeadersListView mListView -> c
    java.util.List mList -> d
    java.util.List mUser -> e
    java.util.List mSystem -> f
    android.widget.LinearLayout mLlLoading -> g
    android.widget.PopupWindow mWindow -> h
    cn.itcase.safe.activity.AppManagerActivity$AppManagerAdapter mAdapter -> i
    android.content.BroadcastReceiver mBroadReceiver -> j
    void onDestroy() -> onDestroy
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List access$0(cn.itcase.safe.activity.AppManagerActivity) -> a
    cn.itcase.safe.activity.AppManagerActivity$AppManagerAdapter access$1(cn.itcase.safe.activity.AppManagerActivity) -> b
    android.widget.PopupWindow access$2(cn.itcase.safe.activity.AppManagerActivity) -> c
    void access$3(cn.itcase.safe.activity.AppManagerActivity,android.widget.PopupWindow) -> a
    java.util.List access$4(cn.itcase.safe.activity.AppManagerActivity) -> d
    java.util.List access$5(cn.itcase.safe.activity.AppManagerActivity) -> e
    void access$6(cn.itcase.safe.activity.AppManagerActivity,java.util.List) -> a
    void access$7(cn.itcase.safe.activity.AppManagerActivity,java.util.List) -> b
    void access$8(cn.itcase.safe.activity.AppManagerActivity,java.util.List) -> c
    android.widget.LinearLayout access$9(cn.itcase.safe.activity.AppManagerActivity) -> f
    void access$10(cn.itcase.safe.activity.AppManagerActivity,cn.itcase.safe.activity.AppManagerActivity$AppManagerAdapter) -> a
    se.emilsjolander.stickylistheaders.StickyListHeadersListView access$11(cn.itcase.safe.activity.AppManagerActivity) -> g
cn.itcase.safe.activity.AppManagerActivity$1 -> cn.itcase.safe.activity.k:
    cn.itcase.safe.activity.AppManagerActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.itcase.safe.activity.AppManagerActivity$2 -> cn.itcase.safe.activity.l:
    cn.itcase.safe.activity.AppManagerActivity this$0 -> a
    void run() -> run
    cn.itcase.safe.activity.AppManagerActivity access$0(cn.itcase.safe.activity.AppManagerActivity$2) -> a
cn.itcase.safe.activity.AppManagerActivity$2$1 -> cn.itcase.safe.activity.m:
    cn.itcase.safe.activity.AppManagerActivity$2 this$1 -> a
    void run() -> run
cn.itcase.safe.activity.AppManagerActivity$AppManagerAdapter -> cn.itcase.safe.activity.n:
    cn.itcase.safe.activity.AppManagerActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> a
    long getHeaderId(int) -> a
cn.itcase.safe.activity.AppManagerActivity$AppOnTouthListener -> cn.itcase.safe.activity.o:
    android.view.View contentView -> b
    cn.itcase.safe.activity.AppManagerActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    cn.itcase.safe.activity.AppManagerActivity access$1(cn.itcase.safe.activity.AppManagerActivity$AppOnTouthListener) -> a
cn.itcase.safe.activity.AppManagerActivity$AppOnTouthListener$1 -> cn.itcase.safe.activity.p:
    cn.itcase.safe.activity.AppManagerActivity$AppOnTouthListener this$1 -> a
    cn.itcase.safe.domain.AppManagerInfo val$appInfo -> b
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.AppManagerActivity$AppOnTouthListener$2 -> cn.itcase.safe.activity.q:
    cn.itcase.safe.activity.AppManagerActivity$AppOnTouthListener this$1 -> a
    cn.itcase.safe.domain.AppManagerInfo val$appInfo -> b
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.AppManagerActivity$AppOnTouthListener$3 -> cn.itcase.safe.activity.r:
    cn.itcase.safe.activity.AppManagerActivity$AppOnTouthListener this$1 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.AppManagerActivity$AppOnTouthListener$4 -> cn.itcase.safe.activity.s:
    cn.itcase.safe.activity.AppManagerActivity$AppOnTouthListener this$1 -> a
    cn.itcase.safe.domain.AppManagerInfo val$appInfo -> b
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.AppManagerActivity$ViewHolder -> cn.itcase.safe.activity.t:
    android.widget.ImageView ivIcon -> a
    android.widget.TextView tvAppName -> b
    android.widget.TextView tvAppRom -> c
    android.widget.TextView tvAppSize -> d
    cn.itcase.safe.activity.AppManagerActivity this$0 -> e
cn.itcase.safe.activity.BaseSetupActivity -> cn.itcase.safe.activity.u:
    android.view.GestureDetector mGd -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void clickNext(android.view.View) -> clickNext
    void clickPre(android.view.View) -> clickPre
    void doNext() -> a
    void doPro() -> b
    boolean performPre() -> c
    boolean performNext() -> d
cn.itcase.safe.activity.BaseSetupActivity$1 -> cn.itcase.safe.activity.v:
    cn.itcase.safe.activity.BaseSetupActivity this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
cn.itcase.safe.activity.BlacklistActivity -> cn.itcase.safe.activity.BlacklistActivity:
    android.widget.EditText mEt_number -> b
    android.widget.RadioGroup mRg -> c
    android.widget.Button mSave -> d
    android.widget.Button mCancel -> e
    int mCheckedId -> f
    boolean isUpdata -> g
    android.widget.TextView mBtitle -> h
    int position -> a
    cn.itcase.safe.db.BlackDao mDao -> i
    void onCreate(android.os.Bundle) -> onCreate
    void access$0(cn.itcase.safe.activity.BlacklistActivity,int) -> a
    android.widget.EditText access$1(cn.itcase.safe.activity.BlacklistActivity) -> a
    int access$2(cn.itcase.safe.activity.BlacklistActivity) -> b
    boolean access$3(cn.itcase.safe.activity.BlacklistActivity) -> c
    cn.itcase.safe.db.BlackDao access$4(cn.itcase.safe.activity.BlacklistActivity) -> d
cn.itcase.safe.activity.BlacklistActivity$CancelListener -> cn.itcase.safe.activity.w:
    cn.itcase.safe.activity.BlacklistActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.BlacklistActivity$RgChang -> cn.itcase.safe.activity.x:
    cn.itcase.safe.activity.BlacklistActivity this$0 -> a
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
cn.itcase.safe.activity.BlacklistActivity$SaveListener -> cn.itcase.safe.activity.y:
    cn.itcase.safe.activity.BlacklistActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.CacheClearActivity -> cn.itcase.safe.activity.CacheClearActivity:
    android.widget.ImageView mIvIcon -> b
    android.widget.ImageView mIvLine -> c
    android.widget.TextView mTvName -> d
    android.widget.TextView mTvCacheSize -> e
    android.widget.ListView mListView -> f
    android.widget.ProgressBar mPro -> g
    java.util.List mData -> h
    cn.itcase.safe.activity.CacheClearActivity$CacheTask mTask -> i
    android.content.pm.PackageManager mPm -> j
    cn.itcase.safe.activity.CacheClearActivity$CacheAdapter mAdapter -> k
    android.widget.LinearLayout mLl -> l
    android.widget.RelativeLayout mRl -> m
    android.widget.Button mBtn -> n
    android.widget.TextView mTvScan -> o
    long mCache -> p
    int mCacheCount -> q
    android.widget.Button mBtnClearCache -> r
    boolean isRunning -> s
    android.content.pm.IPackageStatsObserver$Stub mStatsObserver -> a
    void onCreate(android.os.Bundle) -> onCreate
    void startScan() -> a
    void onPause() -> onPause
    android.content.pm.PackageManager access$0(cn.itcase.safe.activity.CacheClearActivity) -> a
    java.util.List access$1(cn.itcase.safe.activity.CacheClearActivity) -> b
    int access$2(cn.itcase.safe.activity.CacheClearActivity) -> c
    void access$3(cn.itcase.safe.activity.CacheClearActivity,int) -> a
    long access$4(cn.itcase.safe.activity.CacheClearActivity) -> d
    void access$5(cn.itcase.safe.activity.CacheClearActivity,long) -> a
    cn.itcase.safe.activity.CacheClearActivity$CacheTask access$6(cn.itcase.safe.activity.CacheClearActivity) -> e
    void access$7(cn.itcase.safe.activity.CacheClearActivity,cn.itcase.safe.activity.CacheClearActivity$CacheTask) -> a
    android.widget.RelativeLayout access$8(cn.itcase.safe.activity.CacheClearActivity) -> f
    android.widget.LinearLayout access$9(cn.itcase.safe.activity.CacheClearActivity) -> g
    void access$10(cn.itcase.safe.activity.CacheClearActivity,boolean) -> a
    android.widget.ImageView access$11(cn.itcase.safe.activity.CacheClearActivity) -> h
    android.widget.ImageView access$12(cn.itcase.safe.activity.CacheClearActivity) -> i
    android.widget.TextView access$13(cn.itcase.safe.activity.CacheClearActivity) -> j
    android.widget.ProgressBar access$14(cn.itcase.safe.activity.CacheClearActivity) -> k
    android.widget.TextView access$15(cn.itcase.safe.activity.CacheClearActivity) -> l
    void access$16(cn.itcase.safe.activity.CacheClearActivity,cn.itcase.safe.activity.CacheClearActivity$CacheAdapter) -> a
    android.widget.ListView access$17(cn.itcase.safe.activity.CacheClearActivity) -> m
    cn.itcase.safe.activity.CacheClearActivity$CacheAdapter access$18(cn.itcase.safe.activity.CacheClearActivity) -> n
    android.widget.TextView access$19(cn.itcase.safe.activity.CacheClearActivity) -> o
    boolean access$20(cn.itcase.safe.activity.CacheClearActivity) -> p
    void access$21(cn.itcase.safe.activity.CacheClearActivity) -> q
cn.itcase.safe.activity.CacheClearActivity$1 -> cn.itcase.safe.activity.z:
    cn.itcase.safe.activity.CacheClearActivity this$0 -> a
    void onGetStatsCompleted(android.content.pm.PackageStats,boolean) -> onGetStatsCompleted
cn.itcase.safe.activity.CacheClearActivity$BtnOnListenter -> cn.itcase.safe.activity.aa:
    cn.itcase.safe.activity.CacheClearActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.CacheClearActivity$CacheAdapter -> cn.itcase.safe.activity.ab:
    cn.itcase.safe.activity.CacheClearActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.itcase.safe.activity.CacheClearActivity access$1(cn.itcase.safe.activity.CacheClearActivity$CacheAdapter) -> a
cn.itcase.safe.activity.CacheClearActivity$CacheAdapter$1 -> cn.itcase.safe.activity.ac:
    cn.itcase.safe.activity.CacheClearActivity$CacheAdapter this$1 -> a
    cn.itcase.safe.domain.CacheInfo val$cacheInfo -> b
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.CacheClearActivity$CacheTask -> cn.itcase.safe.activity.ad:
    int mMax -> b
    int mProcess -> c
    boolean isFinsh -> d
    cn.itcase.safe.activity.CacheClearActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void upDataProcess(cn.itcase.safe.domain.CacheInfo) -> a
    void stop() -> a
    void onProgressUpdate(cn.itcase.safe.domain.CacheInfo[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
cn.itcase.safe.activity.CacheClearActivity$ClearCache -> cn.itcase.safe.activity.ae:
    cn.itcase.safe.activity.CacheClearActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.CacheClearActivity$ClearCacheObserver -> cn.itcase.safe.activity.af:
    cn.itcase.safe.activity.CacheClearActivity this$0 -> a
    void onRemoveCompleted(java.lang.String,boolean) -> onRemoveCompleted
    cn.itcase.safe.activity.CacheClearActivity access$0(cn.itcase.safe.activity.CacheClearActivity$ClearCacheObserver) -> a
cn.itcase.safe.activity.CacheClearActivity$ClearCacheObserver$1 -> cn.itcase.safe.activity.ag:
    cn.itcase.safe.activity.CacheClearActivity$ClearCacheObserver this$1 -> a
    void run() -> run
cn.itcase.safe.activity.CacheClearActivity$ViewHolder -> cn.itcase.safe.activity.ah:
    android.widget.ImageView icon -> a
    android.widget.ImageView clear -> b
    android.widget.TextView name -> c
    android.widget.TextView cache -> d
    cn.itcase.safe.activity.CacheClearActivity this$0 -> e
cn.itcase.safe.activity.CommonQueryNumber -> cn.itcase.safe.activity.CommonQueryNumber:
    android.widget.ExpandableListView mElv -> a
    int mCurrentOpenPosition -> b
    void onCreate(android.os.Bundle) -> onCreate
    int access$0(cn.itcase.safe.activity.CommonQueryNumber) -> a
    android.widget.ExpandableListView access$1(cn.itcase.safe.activity.CommonQueryNumber) -> b
    void access$2(cn.itcase.safe.activity.CommonQueryNumber,int) -> a
cn.itcase.safe.activity.CommonQueryNumber$1 -> cn.itcase.safe.activity.ai:
    cn.itcase.safe.activity.CommonQueryNumber this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
cn.itcase.safe.activity.CommonQueryNumber$2 -> cn.itcase.safe.activity.aj:
    cn.itcase.safe.activity.CommonQueryNumber this$0 -> a
    boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long) -> onGroupClick
cn.itcase.safe.activity.CommonQueryNumber$CommonExpandable -> cn.itcase.safe.activity.ak:
    cn.itcase.safe.activity.CommonQueryNumber this$0 -> a
    int getGroupCount() -> getGroupCount
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    java.lang.Object getChild(int,int) -> getChild
    long getGroupId(int) -> getGroupId
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean isChildSelectable(int,int) -> isChildSelectable
cn.itcase.safe.activity.CommonUtilsActivity -> cn.itcase.safe.activity.CommonUtilsActivity:
    cn.itcase.safe.view.SettingItemView mComutilInquiry -> a
    cn.itcase.safe.view.SettingItemView mComutilQuery -> b
    cn.itcase.safe.view.SettingItemView mSmsBackups -> c
    cn.itcase.safe.view.SettingItemView mSmsRecovery -> d
    cn.itcase.safe.view.SettingItemView mAppLock -> e
    cn.itcase.safe.view.SettingItemView mOpenLockService1 -> f
    cn.itcase.safe.view.SettingItemView mOpenLockService2 -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void openLockService1(android.view.View) -> openLockService1
    void openLockService2(android.view.View) -> openLockService2
    void smsRecovery() -> a
    void smsbackups() -> b
    void access$0(cn.itcase.safe.activity.CommonUtilsActivity) -> a
    void access$1(cn.itcase.safe.activity.CommonUtilsActivity) -> b
cn.itcase.safe.activity.CommonUtilsActivity$1 -> cn.itcase.safe.activity.al:
    cn.itcase.safe.activity.CommonUtilsActivity this$0 -> a
    android.app.ProgressDialog val$dialog -> b
    void onMax(int) -> a
    void onProgress(int) -> b
    void onSucess() -> a
    void onFailed() -> b
cn.itcase.safe.activity.CommonUtilsActivity$2 -> cn.itcase.safe.activity.am:
    cn.itcase.safe.activity.CommonUtilsActivity this$0 -> a
    android.app.ProgressDialog val$dialog -> b
    void onMax(int) -> a
    void onProgress(int) -> b
    void onSucess() -> a
    void onFailed() -> b
cn.itcase.safe.activity.CommonUtilsActivity$AppLockManager -> cn.itcase.safe.activity.an:
    cn.itcase.safe.activity.CommonUtilsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.CommonUtilsActivity$CommonQuery -> cn.itcase.safe.activity.ao:
    cn.itcase.safe.activity.CommonUtilsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.CommonUtilsActivity$Inquiry -> cn.itcase.safe.activity.ap:
    cn.itcase.safe.activity.CommonUtilsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.CommonUtilsActivity$SmsBackups -> cn.itcase.safe.activity.aq:
    cn.itcase.safe.activity.CommonUtilsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.CommonUtilsActivity$SmsRecovery -> cn.itcase.safe.activity.ar:
    cn.itcase.safe.activity.CommonUtilsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.ContactSelectActivity -> cn.itcase.safe.activity.ContactSelectActivity:
    android.widget.ListView con_lv -> a
    java.util.List list -> b
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List access$0(cn.itcase.safe.activity.ContactSelectActivity) -> a
    android.widget.ListView access$1(cn.itcase.safe.activity.ContactSelectActivity) -> b
cn.itcase.safe.activity.ContactSelectActivity$ConAdapter -> cn.itcase.safe.activity.as:
    cn.itcase.safe.activity.ContactSelectActivity this$0 -> a
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
cn.itcase.safe.activity.ContactSelectActivity$ConOnItem -> cn.itcase.safe.activity.at:
    cn.itcase.safe.activity.ContactSelectActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.itcase.safe.activity.ContactSelectActivity$ViewHandler -> cn.itcase.safe.activity.au:
    android.widget.ImageView iv -> a
    android.widget.TextView con_name -> b
    android.widget.TextView con_phonenum -> c
cn.itcase.safe.activity.HomeActivity -> cn.itcase.safe.activity.HomeActivity:
    java.lang.String[] TITLES -> a
    java.lang.String[] DESCS -> b
    int[] ICONS -> c
    android.widget.ImageView mIvLogo -> d
    android.widget.GridView mGridView -> e
    java.util.List mDatas -> f
    void onCreate(android.os.Bundle) -> onCreate
    void clickSetting(android.view.View) -> clickSetting
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void performAntiVirus() -> a
    void performTraffic() -> b
    void performCacheClear() -> c
    void performProcessManager() -> d
    void performAppManager() -> e
    void performCommonUtils() -> f
    void performLjsr() -> g
    void performSjfd() -> h
    void showEnterPwdDialog() -> i
    void showInitPwdDialog() -> j
    void enterSjfd() -> k
    java.util.List access$0(cn.itcase.safe.activity.HomeActivity) -> a
    void access$1(cn.itcase.safe.activity.HomeActivity) -> b
cn.itcase.safe.activity.HomeActivity$1 -> cn.itcase.safe.activity.av:
    cn.itcase.safe.activity.HomeActivity this$0 -> a
    android.widget.EditText val$etPwd -> b
    android.app.AlertDialog val$dialog -> c
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.HomeActivity$2 -> cn.itcase.safe.activity.aw:
    cn.itcase.safe.activity.HomeActivity this$0 -> a
    android.app.AlertDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.HomeActivity$3 -> cn.itcase.safe.activity.ax:
    cn.itcase.safe.activity.HomeActivity this$0 -> a
    android.widget.EditText val$etPwd -> b
    android.widget.EditText val$etConfirm -> c
    android.app.AlertDialog val$dialog -> d
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.HomeActivity$4 -> cn.itcase.safe.activity.ay:
    cn.itcase.safe.activity.HomeActivity this$0 -> a
    android.app.AlertDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.HomeActivity$HomeAdatper -> cn.itcase.safe.activity.az:
    cn.itcase.safe.activity.HomeActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cn.itcase.safe.activity.InquiryNumberBelong -> cn.itcase.safe.activity.InquiryNumberBelong:
    android.widget.Button mBut -> a
    android.widget.TextView mTv -> b
    android.widget.EditText mEt_number -> c
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.EditText access$0(cn.itcase.safe.activity.InquiryNumberBelong) -> a
    android.widget.TextView access$1(cn.itcase.safe.activity.InquiryNumberBelong) -> b
cn.itcase.safe.activity.InquiryNumberBelong$1 -> cn.itcase.safe.activity.ba:
    cn.itcase.safe.activity.InquiryNumberBelong this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
cn.itcase.safe.activity.InquiryNumberBelong$ButInquiry -> cn.itcase.safe.activity.bb:
    cn.itcase.safe.activity.InquiryNumberBelong this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.LjsrActivity -> cn.itcase.safe.activity.LjsrActivity:
    android.widget.ImageView mIv -> a
    android.widget.ImageView mIvEmpty -> b
    android.widget.ListView mLv -> c
    java.util.List mList -> d
    cn.itcase.safe.db.BlackDao mDao -> e
    android.widget.LinearLayout mLlLoading -> f
    cn.itcase.safe.activity.LjsrActivity$SmsCallAdapter mAdapter -> g
    int FINDPART -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void startInit() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    android.widget.ListView access$0(cn.itcase.safe.activity.LjsrActivity) -> a
    java.util.List access$1(cn.itcase.safe.activity.LjsrActivity) -> b
    android.widget.LinearLayout access$2(cn.itcase.safe.activity.LjsrActivity) -> c
    cn.itcase.safe.db.BlackDao access$3(cn.itcase.safe.activity.LjsrActivity) -> d
    int access$4(cn.itcase.safe.activity.LjsrActivity) -> e
    cn.itcase.safe.activity.LjsrActivity$SmsCallAdapter access$5(cn.itcase.safe.activity.LjsrActivity) -> f
    void access$6(cn.itcase.safe.activity.LjsrActivity,java.util.List) -> a
    void access$7(cn.itcase.safe.activity.LjsrActivity,cn.itcase.safe.activity.LjsrActivity$SmsCallAdapter) -> a
    android.widget.ImageView access$8(cn.itcase.safe.activity.LjsrActivity) -> g
cn.itcase.safe.activity.LjsrActivity$1 -> cn.itcase.safe.activity.bc:
    cn.itcase.safe.activity.LjsrActivity this$0 -> a
    void run() -> run
    cn.itcase.safe.activity.LjsrActivity access$0(cn.itcase.safe.activity.LjsrActivity$1) -> a
cn.itcase.safe.activity.LjsrActivity$1$1 -> cn.itcase.safe.activity.bd:
    cn.itcase.safe.activity.LjsrActivity$1 this$1 -> a
    void run() -> run
cn.itcase.safe.activity.LjsrActivity$ListScrollListener -> cn.itcase.safe.activity.be:
    cn.itcase.safe.activity.LjsrActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    cn.itcase.safe.activity.LjsrActivity access$1(cn.itcase.safe.activity.LjsrActivity$ListScrollListener) -> a
cn.itcase.safe.activity.LjsrActivity$ListScrollListener$1 -> cn.itcase.safe.activity.bf:
    cn.itcase.safe.activity.LjsrActivity$ListScrollListener this$1 -> a
    void run() -> run
    cn.itcase.safe.activity.LjsrActivity$ListScrollListener access$0(cn.itcase.safe.activity.LjsrActivity$ListScrollListener$1) -> a
cn.itcase.safe.activity.LjsrActivity$ListScrollListener$1$1 -> cn.itcase.safe.activity.bg:
    cn.itcase.safe.activity.LjsrActivity$ListScrollListener$1 this$2 -> a
    void run() -> run
cn.itcase.safe.activity.LjsrActivity$ListScrollListener$1$2 -> cn.itcase.safe.activity.bh:
    cn.itcase.safe.activity.LjsrActivity$ListScrollListener$1 this$2 -> a
    void run() -> run
cn.itcase.safe.activity.LjsrActivity$MCallSmsIv -> cn.itcase.safe.activity.bi:
    cn.itcase.safe.activity.LjsrActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.LjsrActivity$SmsCallAdapter -> cn.itcase.safe.activity.bj:
    cn.itcase.safe.activity.LjsrActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    cn.itcase.safe.activity.LjsrActivity access$1(cn.itcase.safe.activity.LjsrActivity$SmsCallAdapter) -> a
cn.itcase.safe.activity.LjsrActivity$SmsCallAdapter$1 -> cn.itcase.safe.activity.bk:
    cn.itcase.safe.activity.LjsrActivity$SmsCallAdapter this$1 -> a
    java.lang.String val$number -> b
    cn.itcase.safe.domain.CallSmsSafeInfo val$safeinfo -> c
    void onClick(android.view.View) -> onClick
    cn.itcase.safe.activity.LjsrActivity$SmsCallAdapter access$0(cn.itcase.safe.activity.LjsrActivity$SmsCallAdapter$1) -> a
cn.itcase.safe.activity.LjsrActivity$SmsCallAdapter$1$1 -> cn.itcase.safe.activity.bl:
    cn.itcase.safe.activity.LjsrActivity$SmsCallAdapter$1 this$2 -> a
    java.lang.String val$number -> b
    cn.itcase.safe.domain.CallSmsSafeInfo val$safeinfo -> c
    void onClick(android.content.DialogInterface,int) -> onClick
cn.itcase.safe.activity.LjsrActivity$ViewHandler -> cn.itcase.safe.activity.bm:
    android.widget.TextView item_tv_number -> a
    android.widget.TextView item_tv_type -> b
    android.widget.ImageView item_iv_icon -> c
cn.itcase.safe.activity.LockServiceActivity -> cn.itcase.safe.activity.LockServiceActivity:
    cn.itcase.safe.domain.AppLockInfo mInfo -> a
    java.lang.String mApppackge -> b
    android.widget.ImageView mIvIcon -> c
    android.widget.EditText mEdInText -> d
    android.widget.TextView mTvName -> e
    void onCreate(android.os.Bundle) -> onCreate
    void cilckOk(android.view.View) -> cilckOk
    void onBackPressed() -> onBackPressed
cn.itcase.safe.activity.LostSetup1Activity -> cn.itcase.safe.activity.LostSetup1Activity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean performPre() -> c
    boolean performNext() -> d
cn.itcase.safe.activity.LostSetup2Activity -> cn.itcase.safe.activity.LostSetup2Activity:
    android.widget.ImageView mIv -> b
    void onCreate(android.os.Bundle) -> onCreate
    void setup2_bundle(android.view.View) -> setup2_bundle
    boolean performPre() -> c
    boolean performNext() -> d
cn.itcase.safe.activity.LostSetup3Activity -> cn.itcase.safe.activity.LostSetup3Activity:
    android.widget.EditText phoneNum -> b
    void onCreate(android.os.Bundle) -> onCreate
    void clickContact(android.view.View) -> clickContact
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean performPre() -> c
    boolean performNext() -> d
cn.itcase.safe.activity.LostSetup4Activity -> cn.itcase.safe.activity.LostSetup4Activity:
    java.lang.String TAG -> c
    android.widget.ImageView set_admin -> d
    android.app.admin.DevicePolicyManager dpm -> b
    void onCreate(android.os.Bundle) -> onCreate
    void setp4_admin(android.view.View) -> setp4_admin
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean performPre() -> c
    boolean performNext() -> d
cn.itcase.safe.activity.LostSetup5Activity -> cn.itcase.safe.activity.LostSetup5Activity:
    android.widget.CheckBox mCb -> b
    void onCreate(android.os.Bundle) -> onCreate
    boolean performPre() -> c
    boolean performNext() -> d
cn.itcase.safe.activity.LostSetup5Activity$1 -> cn.itcase.safe.activity.bn:
    cn.itcase.safe.activity.LostSetup5Activity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
cn.itcase.safe.activity.LostSetupFindActivity -> cn.itcase.safe.activity.LostSetupFindActivity:
    android.widget.TextView mTv_num -> a
    android.widget.ImageView mIvIcon -> b
    void onCreate(android.os.Bundle) -> onCreate
    void isUnsealSafe(android.view.View) -> isUnsealSafe
    void reInstall(android.view.View) -> reInstall
cn.itcase.safe.activity.ProcessManagerActivity -> cn.itcase.safe.activity.ProcessManagerActivity:
    cn.itcase.safe.view.MyProgress mProcessCount -> a
    cn.itcase.safe.view.MyProgress mMomory -> b
    se.emilsjolander.stickylistheaders.StickyListHeadersListView mListView -> c
    android.widget.LinearLayout mProLoading -> d
    java.util.List mProData -> e
    java.util.List mUser -> f
    cn.itcase.safe.activity.ProcessManagerActivity$ProManAdapter mProManAdapter -> g
    int allRunCount -> h
    int totalPssCount -> i
    long totalMomory -> j
    long freeMomory -> k
    android.widget.ImageView mArr1 -> l
    android.widget.ImageView mArr2 -> m
    android.widget.SlidingDrawer mDrawer -> n
    cn.itcase.safe.view.SettingItemView mShowSystemPro -> o
    cn.itcase.safe.view.SettingItemView mAutoClear -> p
    boolean isDisplayAll -> q
    void onCreate(android.os.Bundle) -> onCreate
    void openThreadGetData() -> c
    void onStart() -> onStart
    void showAnamation() -> a
    void showUpAnamation() -> b
    void setRunMomoryUI() -> d
    void setProcessTitleUI() -> e
    void clickAllCb(android.view.View) -> clickAllCb
    void clickReverse(android.view.View) -> clickReverse
    void cleanAllCilck(android.view.View) -> cleanAllCilck
    cn.itcase.safe.view.SettingItemView access$0(cn.itcase.safe.activity.ProcessManagerActivity) -> a
    void access$1(cn.itcase.safe.activity.ProcessManagerActivity,boolean) -> a
    boolean access$2(cn.itcase.safe.activity.ProcessManagerActivity) -> b
    cn.itcase.safe.view.SettingItemView access$3(cn.itcase.safe.activity.ProcessManagerActivity) -> c
    cn.itcase.safe.activity.ProcessManagerActivity$ProManAdapter access$4(cn.itcase.safe.activity.ProcessManagerActivity) -> d
    java.util.List access$5(cn.itcase.safe.activity.ProcessManagerActivity) -> e
    java.util.List access$6(cn.itcase.safe.activity.ProcessManagerActivity) -> f
    void access$7(cn.itcase.safe.activity.ProcessManagerActivity,java.util.List) -> a
    void access$8(cn.itcase.safe.activity.ProcessManagerActivity,java.util.List) -> b
    void access$9(cn.itcase.safe.activity.ProcessManagerActivity,cn.itcase.safe.activity.ProcessManagerActivity$ProManAdapter) -> a
    android.widget.LinearLayout access$10(cn.itcase.safe.activity.ProcessManagerActivity) -> g
    se.emilsjolander.stickylistheaders.StickyListHeadersListView access$11(cn.itcase.safe.activity.ProcessManagerActivity) -> h
cn.itcase.safe.activity.ProcessManagerActivity$1 -> cn.itcase.safe.activity.bo:
    cn.itcase.safe.activity.ProcessManagerActivity this$0 -> a
    void onDrawerOpened() -> onDrawerOpened
cn.itcase.safe.activity.ProcessManagerActivity$2 -> cn.itcase.safe.activity.bp:
    cn.itcase.safe.activity.ProcessManagerActivity this$0 -> a
    void onDrawerClosed() -> onDrawerClosed
cn.itcase.safe.activity.ProcessManagerActivity$3 -> cn.itcase.safe.activity.bq:
    cn.itcase.safe.activity.ProcessManagerActivity this$0 -> a
    void run() -> run
    cn.itcase.safe.activity.ProcessManagerActivity access$0(cn.itcase.safe.activity.ProcessManagerActivity$3) -> a
cn.itcase.safe.activity.ProcessManagerActivity$3$1 -> cn.itcase.safe.activity.br:
    cn.itcase.safe.activity.ProcessManagerActivity$3 this$1 -> a
    void run() -> run
cn.itcase.safe.activity.ProcessManagerActivity$OpenAutoClearPro -> cn.itcase.safe.activity.bs:
    cn.itcase.safe.activity.ProcessManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.ProcessManagerActivity$ProManAdapter -> cn.itcase.safe.activity.bt:
    cn.itcase.safe.activity.ProcessManagerActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> a
    long getHeaderId(int) -> a
    cn.itcase.safe.activity.ProcessManagerActivity access$1(cn.itcase.safe.activity.ProcessManagerActivity$ProManAdapter) -> a
cn.itcase.safe.activity.ProcessManagerActivity$ProManAdapter$1 -> cn.itcase.safe.activity.bu:
    cn.itcase.safe.activity.ProcessManagerActivity$ProManAdapter this$1 -> a
    cn.itcase.safe.domain.ProcessInfo val$newProInfo -> b
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.ProcessManagerActivity$ShowSystemPro -> cn.itcase.safe.activity.bv:
    cn.itcase.safe.activity.ProcessManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.ProcessManagerActivity$ViewHolder -> cn.itcase.safe.activity.bw:
    android.widget.ImageView proIcon -> a
    android.widget.TextView proAppName -> b
    android.widget.TextView proMomory -> c
    android.widget.CheckBox proCb -> d
    cn.itcase.safe.activity.ProcessManagerActivity this$0 -> e
cn.itcase.safe.activity.R -> cn.itcase.safe.activity.bx:
cn.itcase.safe.activity.R$styleable -> cn.itcase.safe.activity.by:
    int[] ArcProgress -> ArcProgress
    int ArcProgress_arc_angle -> ArcProgress_arc_angle
    int ArcProgress_arc_bottom_text -> ArcProgress_arc_bottom_text
    int ArcProgress_arc_bottom_text_size -> ArcProgress_arc_bottom_text_size
    int ArcProgress_arc_finished_color -> ArcProgress_arc_finished_color
    int ArcProgress_arc_max -> ArcProgress_arc_max
    int ArcProgress_arc_progress -> ArcProgress_arc_progress
    int ArcProgress_arc_stroke_width -> ArcProgress_arc_stroke_width
    int ArcProgress_arc_suffix_text -> ArcProgress_arc_suffix_text
    int ArcProgress_arc_suffix_text_padding -> ArcProgress_arc_suffix_text_padding
    int ArcProgress_arc_suffix_text_size -> ArcProgress_arc_suffix_text_size
    int ArcProgress_arc_text_color -> ArcProgress_arc_text_color
    int ArcProgress_arc_text_size -> ArcProgress_arc_text_size
    int ArcProgress_arc_unfinished_color -> ArcProgress_arc_unfinished_color
    int[] CircleProgress -> CircleProgress
    int CircleProgress_circle_finished_color -> CircleProgress_circle_finished_color
    int CircleProgress_circle_max -> CircleProgress_circle_max
    int CircleProgress_circle_prefix_text -> CircleProgress_circle_prefix_text
    int CircleProgress_circle_progress -> CircleProgress_circle_progress
    int CircleProgress_circle_suffix_text -> CircleProgress_circle_suffix_text
    int CircleProgress_circle_text_color -> CircleProgress_circle_text_color
    int CircleProgress_circle_text_size -> CircleProgress_circle_text_size
    int CircleProgress_circle_unfinished_color -> CircleProgress_circle_unfinished_color
    int[] DonutProgress -> DonutProgress
    int DonutProgress_donut_background_color -> DonutProgress_donut_background_color
    int DonutProgress_donut_circle_starting_degree -> DonutProgress_donut_circle_starting_degree
    int DonutProgress_donut_finished_color -> DonutProgress_donut_finished_color
    int DonutProgress_donut_finished_stroke_width -> DonutProgress_donut_finished_stroke_width
    int DonutProgress_donut_inner_bottom_text -> DonutProgress_donut_inner_bottom_text
    int DonutProgress_donut_inner_bottom_text_color -> DonutProgress_donut_inner_bottom_text_color
    int DonutProgress_donut_inner_bottom_text_size -> DonutProgress_donut_inner_bottom_text_size
    int DonutProgress_donut_max -> DonutProgress_donut_max
    int DonutProgress_donut_prefix_text -> DonutProgress_donut_prefix_text
    int DonutProgress_donut_progress -> DonutProgress_donut_progress
    int DonutProgress_donut_suffix_text -> DonutProgress_donut_suffix_text
    int DonutProgress_donut_text -> DonutProgress_donut_text
    int DonutProgress_donut_text_color -> DonutProgress_donut_text_color
    int DonutProgress_donut_text_size -> DonutProgress_donut_text_size
    int DonutProgress_donut_unfinished_color -> DonutProgress_donut_unfinished_color
    int DonutProgress_donut_unfinished_stroke_width -> DonutProgress_donut_unfinished_stroke_width
    int[] SettingItemView -> SettingItemView
    int SettingItemView_itbackground -> SettingItemView_itbackground
    int SettingItemView_title -> SettingItemView_title
    int SettingItemView_toggleEnable -> SettingItemView_toggleEnable
    int[] StickyListHeadersListView -> StickyListHeadersListView
    int StickyListHeadersListView_android_cacheColorHint -> StickyListHeadersListView_android_cacheColorHint
    int StickyListHeadersListView_android_choiceMode -> StickyListHeadersListView_android_choiceMode
    int StickyListHeadersListView_android_clipToPadding -> StickyListHeadersListView_android_clipToPadding
    int StickyListHeadersListView_android_divider -> StickyListHeadersListView_android_divider
    int StickyListHeadersListView_android_dividerHeight -> StickyListHeadersListView_android_dividerHeight
    int StickyListHeadersListView_android_drawSelectorOnTop -> StickyListHeadersListView_android_drawSelectorOnTop
    int StickyListHeadersListView_android_fadingEdgeLength -> StickyListHeadersListView_android_fadingEdgeLength
    int StickyListHeadersListView_android_fastScrollAlwaysVisible -> StickyListHeadersListView_android_fastScrollAlwaysVisible
    int StickyListHeadersListView_android_fastScrollEnabled -> StickyListHeadersListView_android_fastScrollEnabled
    int StickyListHeadersListView_android_listSelector -> StickyListHeadersListView_android_listSelector
    int StickyListHeadersListView_android_overScrollMode -> StickyListHeadersListView_android_overScrollMode
    int StickyListHeadersListView_android_padding -> StickyListHeadersListView_android_padding
    int StickyListHeadersListView_android_paddingBottom -> StickyListHeadersListView_android_paddingBottom
    int StickyListHeadersListView_android_paddingLeft -> StickyListHeadersListView_android_paddingLeft
    int StickyListHeadersListView_android_paddingRight -> StickyListHeadersListView_android_paddingRight
    int StickyListHeadersListView_android_paddingTop -> StickyListHeadersListView_android_paddingTop
    int StickyListHeadersListView_android_requiresFadingEdge -> StickyListHeadersListView_android_requiresFadingEdge
    int StickyListHeadersListView_android_scrollbarStyle -> StickyListHeadersListView_android_scrollbarStyle
    int StickyListHeadersListView_android_scrollbars -> StickyListHeadersListView_android_scrollbars
    int StickyListHeadersListView_android_scrollingCache -> StickyListHeadersListView_android_scrollingCache
    int StickyListHeadersListView_android_stackFromBottom -> StickyListHeadersListView_android_stackFromBottom
    int StickyListHeadersListView_android_transcriptMode -> StickyListHeadersListView_android_transcriptMode
    int StickyListHeadersListView_hasStickyHeaders -> StickyListHeadersListView_hasStickyHeaders
    int StickyListHeadersListView_isDrawingListUnderStickyHeader -> StickyListHeadersListView_isDrawingListUnderStickyHeader
    int StickyListHeadersListView_stickyListHeadersListViewStyle -> StickyListHeadersListView_stickyListHeadersListViewStyle
    int[] Themes -> Themes
    int Themes_arcProgressStyle -> Themes_arcProgressStyle
    int Themes_circleProgressStyle -> Themes_circleProgressStyle
    int Themes_donutProgressStyle -> Themes_donutProgressStyle
cn.itcase.safe.activity.SettingActivity -> cn.itcase.safe.activity.SettingActivity:
    cn.itcase.safe.view.SettingItemView mSivAutoUpdate -> a
    cn.itcase.safe.view.SettingItemView mCallSmsSafeToggle -> b
    cn.itcase.safe.view.SettingItemView mBelong -> c
    cn.itcase.safe.view.SettingItemView mBelongStyle -> d
    java.lang.String[] titles -> e
    int[] icons -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    int[] access$0(cn.itcase.safe.activity.SettingActivity) -> a
    java.lang.String[] access$1(cn.itcase.safe.activity.SettingActivity) -> b
    cn.itcase.safe.view.SettingItemView access$2(cn.itcase.safe.activity.SettingActivity) -> c
    cn.itcase.safe.view.SettingItemView access$3(cn.itcase.safe.activity.SettingActivity) -> d
    cn.itcase.safe.view.SettingItemView access$4(cn.itcase.safe.activity.SettingActivity) -> e
cn.itcase.safe.activity.SettingActivity$1 -> cn.itcase.safe.activity.bz:
    cn.itcase.safe.activity.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.SettingActivity$2 -> cn.itcase.safe.activity.ca:
    cn.itcase.safe.activity.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.SettingActivity$CallSmsSafe -> cn.itcase.safe.activity.cb:
    cn.itcase.safe.activity.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.activity.SettingActivity$DialogAdapter -> cn.itcase.safe.activity.cc:
    cn.itcase.safe.activity.SettingActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cn.itcase.safe.activity.SettingActivity$DialogStyle -> cn.itcase.safe.activity.cd:
    cn.itcase.safe.activity.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    cn.itcase.safe.activity.SettingActivity access$1(cn.itcase.safe.activity.SettingActivity$DialogStyle) -> a
cn.itcase.safe.activity.SettingActivity$DialogStyle$1 -> cn.itcase.safe.activity.ce:
    cn.itcase.safe.activity.SettingActivity$DialogStyle this$1 -> a
    cn.itcase.safe.view.DialogAddress val$da -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
cn.itcase.safe.activity.SettingActivity$ViewHolder -> cn.itcase.safe.activity.cf:
    android.widget.ImageView icon -> a
    android.widget.ImageView isSelected -> b
    android.widget.TextView tvTitle -> c
    cn.itcase.safe.activity.SettingActivity this$0 -> d
cn.itcase.safe.activity.SplashActivity -> cn.itcase.safe.activity.SplashActivity:
    android.widget.TextView mTvVersion -> b
    java.lang.String mDesc -> c
    android.os.Handler mHandler -> d
    java.lang.String mUrl -> a
    void onCreate(android.os.Bundle) -> onCreate
    void copyCommonAntiVirusDB() -> a
    void copyCommonNumberAddressDB() -> b
    void copyAddressDB() -> c
    void close(java.io.Closeable) -> a
    void load2Home() -> d
    void showUpdateDialog() -> e
    void showProgressDialog() -> f
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void checkVersionUpdate() -> g
    void access$0(cn.itcase.safe.activity.SplashActivity) -> a
    void access$1(cn.itcase.safe.activity.SplashActivity) -> b
    void access$2(cn.itcase.safe.activity.SplashActivity,java.lang.String) -> a
    android.os.Handler access$3(cn.itcase.safe.activity.SplashActivity) -> c
    void access$4(cn.itcase.safe.activity.SplashActivity,java.io.Closeable) -> a
    void access$5(cn.itcase.safe.activity.SplashActivity) -> d
cn.itcase.safe.activity.SplashActivity$1 -> cn.itcase.safe.activity.cg:
    cn.itcase.safe.activity.SplashActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
cn.itcase.safe.activity.SplashActivity$2 -> cn.itcase.safe.activity.ch:
    cn.itcase.safe.activity.SplashActivity this$0 -> a
    void run() -> run
cn.itcase.safe.activity.SplashActivity$3 -> cn.itcase.safe.activity.ci:
    cn.itcase.safe.activity.SplashActivity this$0 -> a
    void run() -> run
cn.itcase.safe.activity.SplashActivity$4 -> cn.itcase.safe.activity.cj:
    cn.itcase.safe.activity.SplashActivity this$0 -> a
    void run() -> run
cn.itcase.safe.activity.SplashActivity$5 -> cn.itcase.safe.activity.ck:
    cn.itcase.safe.activity.SplashActivity this$0 -> a
    void run() -> run
cn.itcase.safe.activity.SplashActivity$6 -> cn.itcase.safe.activity.cl:
    cn.itcase.safe.activity.SplashActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.itcase.safe.activity.SplashActivity$7 -> cn.itcase.safe.activity.cm:
    cn.itcase.safe.activity.SplashActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.itcase.safe.activity.SplashActivity$8 -> cn.itcase.safe.activity.cn:
    cn.itcase.safe.activity.SplashActivity this$0 -> a
    android.app.ProgressDialog val$dialog -> b
    java.lang.String val$target -> c
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> a
    void onLoading(long,long,boolean) -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> a
cn.itcase.safe.activity.SplashActivity$CheckVersionTask -> cn.itcase.safe.activity.co:
    cn.itcase.safe.activity.SplashActivity this$0 -> a
    void run() -> run
cn.itcase.safe.activity.TrafficActivity -> cn.itcase.safe.activity.TrafficActivity:
    android.widget.ListView mListView -> a
    android.widget.LinearLayout mProcess -> b
    cn.itcase.safe.activity.TrafficActivity$TrafficAsync mTask -> c
    android.content.pm.PackageManager mPm -> d
    java.util.List mData -> e
    cn.itcase.safe.activity.TrafficActivity$TrafficAdapter mAdapter -> f
    void onCreate(android.os.Bundle) -> onCreate
    long getRcv(int) -> a
    long getSnd(int) -> b
    android.widget.LinearLayout access$0(cn.itcase.safe.activity.TrafficActivity) -> a
    void access$1(cn.itcase.safe.activity.TrafficActivity,java.util.List) -> a
    void access$2(cn.itcase.safe.activity.TrafficActivity,android.content.pm.PackageManager) -> a
    android.content.pm.PackageManager access$3(cn.itcase.safe.activity.TrafficActivity) -> b
    long access$4(cn.itcase.safe.activity.TrafficActivity,int) -> a
    long access$5(cn.itcase.safe.activity.TrafficActivity,int) -> b
    java.util.List access$6(cn.itcase.safe.activity.TrafficActivity) -> c
    cn.itcase.safe.activity.TrafficActivity$TrafficAdapter access$7(cn.itcase.safe.activity.TrafficActivity) -> d
    void access$8(cn.itcase.safe.activity.TrafficActivity,cn.itcase.safe.activity.TrafficActivity$TrafficAdapter) -> a
    android.widget.ListView access$9(cn.itcase.safe.activity.TrafficActivity) -> e
cn.itcase.safe.activity.TrafficActivity$TrafficAdapter -> cn.itcase.safe.activity.cp:
    cn.itcase.safe.activity.TrafficActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
cn.itcase.safe.activity.TrafficActivity$TrafficAsync -> cn.itcase.safe.activity.cq:
    cn.itcase.safe.activity.TrafficActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.itcase.safe.activity.TrafficActivity$ViewHolder -> cn.itcase.safe.activity.cr:
    android.widget.TextView name -> a
    android.widget.TextView rcv -> b
    android.widget.TextView snd -> c
    android.widget.ImageView icon -> d
    cn.itcase.safe.activity.TrafficActivity this$0 -> e
cn.itcase.safe.db.AddressDao -> cn.itcase.safe.a.a:
    java.lang.String TAG -> a
    java.lang.String findAddress(android.content.Context,java.lang.String) -> a
cn.itcase.safe.db.AntiVirusDao -> cn.itcase.safe.a.b:
    boolean isVirus(android.content.Context,java.lang.String) -> a
cn.itcase.safe.db.AppLockDao -> cn.itcase.safe.a.c:
    cn.itcase.safe.db.AppLockDbHelp mHelp -> a
    android.content.Context mContext -> b
    boolean add(java.lang.String) -> a
    boolean delect(java.lang.String) -> b
    boolean select(java.lang.String) -> c
    java.util.List getAllLockApp() -> a
cn.itcase.safe.db.AppLockDbHelp -> cn.itcase.safe.a.d:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
cn.itcase.safe.db.BlackDao -> cn.itcase.safe.a.e:
    cn.itcase.safe.db.BlacklistDbHelp mHelp -> a
    boolean add(java.lang.String,int) -> a
    boolean delect(java.lang.String) -> a
    boolean updata(java.lang.String,int) -> b
    int findType(java.lang.String) -> b
    java.util.List findPart(int,int) -> a
cn.itcase.safe.db.BlacklistDbHelp -> cn.itcase.safe.a.f:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
cn.itcase.safe.db.CommonQueryDao -> cn.itcase.safe.a.g:
    int getGroupCount(android.content.Context) -> a
    java.lang.String getGroupText(android.content.Context,int) -> a
    int getChildrenCount(android.content.Context,int) -> b
    java.lang.String[] getChildrenText(android.content.Context,int,int) -> a
cn.itcase.safe.domain.AppLockInfo -> cn.itcase.safe.b.a:
    android.graphics.drawable.Drawable icon -> a
    java.lang.String appName -> b
    java.lang.String packageName -> c
cn.itcase.safe.domain.AppManagerInfo -> cn.itcase.safe.b.b:
    java.lang.String appName -> a
    java.lang.String appPackage -> b
    android.graphics.drawable.Drawable icon -> c
    boolean isInstallSD -> d
    boolean isSystem -> e
    long appSize -> f
cn.itcase.safe.domain.CacheInfo -> cn.itcase.safe.b.c:
    android.graphics.drawable.Drawable icon -> a
    java.lang.String name -> b
    long cacheSize -> c
    java.lang.String packageName -> d
cn.itcase.safe.domain.CallSmsSafeInfo -> cn.itcase.safe.b.d:
    java.lang.String phoneNumber -> a
    int type -> b
cn.itcase.safe.domain.ConcateItem -> cn.itcase.safe.b.e:
    java.lang.String name -> a
    java.lang.String phone -> b
    java.lang.Long imager -> c
cn.itcase.safe.domain.HomeItem -> cn.itcase.safe.b.f:
    int iconId -> a
    java.lang.String title -> b
    java.lang.String desc -> c
cn.itcase.safe.domain.ProcessInfo -> cn.itcase.safe.b.g:
    android.graphics.drawable.Drawable icon -> a
    java.lang.String proName -> b
    boolean isSystem -> c
    long momory -> d
    java.lang.String packageName -> e
    boolean isClick -> f
cn.itcase.safe.domain.TrafficInfo -> cn.itcase.safe.b.h:
    java.lang.String packagerName -> a
    java.lang.String name -> b
    android.graphics.drawable.Drawable icon -> c
    long rcv -> d
    long snd -> e
cn.itcase.safe.domain.VirusInfo -> cn.itcase.safe.b.i:
    java.lang.String name -> a
    java.lang.String packageName -> b
    boolean isVirus -> c
    android.graphics.drawable.Drawable icon -> d
cn.itcase.safe.receive.AppStyleProcess -> cn.itcase.safe.receive.AppStyleProcess:
    void onEnabled(android.content.Context) -> onEnabled
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
    void onDisabled(android.content.Context) -> onDisabled
    void onDeleted(android.content.Context,int[]) -> onDeleted
cn.itcase.safe.receive.BootCompleteReceiver -> cn.itcase.safe.receive.BootCompleteReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.itcase.safe.receive.KillProcessReceiver -> cn.itcase.safe.receive.KillProcessReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.itcase.safe.receive.SafeAdminReceive -> cn.itcase.safe.receive.SafeAdminReceive:
cn.itcase.safe.receive.SmsReceiver -> cn.itcase.safe.receive.SmsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.itcase.safe.service.AutoClearService -> cn.itcase.safe.service.AutoClearService:
    android.content.BroadcastReceiver mReceiver -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
cn.itcase.safe.service.AutoClearService$1 -> cn.itcase.safe.service.a:
    cn.itcase.safe.service.AutoClearService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.itcase.safe.service.CallSmsSafeService -> cn.itcase.safe.service.CallSmsSafeService:
    android.telephony.TelephonyManager mTm -> a
    cn.itcase.safe.db.BlackDao mBao -> b
    android.content.BroadcastReceiver mCallSmsReceiver -> c
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    cn.itcase.safe.db.BlackDao access$0(cn.itcase.safe.service.CallSmsSafeService) -> a
cn.itcase.safe.service.CallSmsSafeService$1 -> cn.itcase.safe.service.b:
    cn.itcase.safe.service.CallSmsSafeService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.itcase.safe.service.DisplyBelongService -> cn.itcase.safe.service.DisplyBelongService:
    android.telephony.TelephonyManager mtm -> b
    cn.itcase.safe.utils.MyToast mToast -> c
    android.telephony.PhoneStateListener mCallListener -> d
    android.content.BroadcastReceiver mCallReceiver -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    cn.itcase.safe.utils.MyToast access$0(cn.itcase.safe.service.DisplyBelongService) -> a
cn.itcase.safe.service.DisplyBelongService$1 -> cn.itcase.safe.service.c:
    cn.itcase.safe.service.DisplyBelongService this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
cn.itcase.safe.service.DisplyBelongService$2 -> cn.itcase.safe.service.d:
    cn.itcase.safe.service.DisplyBelongService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.itcase.safe.service.GPSService -> cn.itcase.safe.service.GPSService:
    android.location.LocationManager mLm -> a
    android.location.LocationListener listener -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void loadLocation(double,double) -> a
    void onDestroy() -> onDestroy
    void sendMessge(java.lang.String) -> a
    void access$0(cn.itcase.safe.service.GPSService,double,double) -> a
    void access$1(cn.itcase.safe.service.GPSService,java.lang.String) -> a
cn.itcase.safe.service.GPSService$1 -> cn.itcase.safe.service.e:
    cn.itcase.safe.service.GPSService this$0 -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
cn.itcase.safe.service.GPSService$2 -> cn.itcase.safe.service.f:
    cn.itcase.safe.service.GPSService this$0 -> a
    double val$longitude -> b
    double val$latitude -> c
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> a
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> a
cn.itcase.safe.service.OpenLockService1 -> cn.itcase.safe.service.g:
    java.util.List mLockApp -> a
    java.util.List mFreeList -> b
    boolean isRun -> c
    cn.itcase.safe.db.AppLockDao mDao -> d
    android.content.BroadcastReceiver mReceiver -> e
    android.database.ContentObserver mReceiverOb -> f
    void onCreate() -> onCreate
    void startWatch() -> a
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    java.util.List access$0(cn.itcase.safe.service.OpenLockService1) -> a
    void access$1(cn.itcase.safe.service.OpenLockService1) -> b
    void access$2(cn.itcase.safe.service.OpenLockService1,boolean) -> a
    cn.itcase.safe.db.AppLockDao access$3(cn.itcase.safe.service.OpenLockService1) -> c
    void access$4(cn.itcase.safe.service.OpenLockService1,java.util.List) -> a
    boolean access$5(cn.itcase.safe.service.OpenLockService1) -> d
    java.util.List access$6(cn.itcase.safe.service.OpenLockService1) -> e
cn.itcase.safe.service.OpenLockService1$1 -> cn.itcase.safe.service.h:
    cn.itcase.safe.service.OpenLockService1 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.itcase.safe.service.OpenLockService1$2 -> cn.itcase.safe.service.i:
    cn.itcase.safe.service.OpenLockService1 this$0 -> a
    void onChange(boolean) -> onChange
cn.itcase.safe.service.OpenLockService1$3 -> cn.itcase.safe.service.j:
    cn.itcase.safe.service.OpenLockService1 this$0 -> a
    void run() -> run
cn.itcase.safe.service.OpenLockService2 -> cn.itcase.safe.service.OpenLockService2:
    cn.itcase.safe.db.AppLockDao mDao -> a
    java.util.List mData -> b
    android.content.BroadcastReceiver mReceiver -> c
    void onCreate() -> onCreate
    void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onAccessibilityEvent
    void onInterrupt() -> onInterrupt
    void onDestroy() -> onDestroy
    java.util.List access$0(cn.itcase.safe.service.OpenLockService2) -> a
cn.itcase.safe.service.OpenLockService2$1 -> cn.itcase.safe.service.k:
    cn.itcase.safe.service.OpenLockService2 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
cn.itcase.safe.service.UpdataWidgetService -> cn.itcase.safe.service.UpdataWidgetService:
    android.appwidget.AppWidgetManager mWm -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void startUpdata() -> a
    void onDestroy() -> onDestroy
    android.appwidget.AppWidgetManager access$0(cn.itcase.safe.service.UpdataWidgetService) -> a
cn.itcase.safe.service.UpdataWidgetService$1 -> cn.itcase.safe.service.l:
    cn.itcase.safe.service.UpdataWidgetService this$0 -> a
    void run() -> run
cn.itcase.safe.utils.AppInfoProvider -> cn.itcase.safe.c.a:
    java.util.List getAllApps(android.content.Context) -> a
    java.util.List getAllAppsLock(android.content.Context) -> b
    cn.itcase.safe.domain.AppLockInfo getAppInfo(android.content.Context,java.lang.String) -> a
cn.itcase.safe.utils.ContaceUtils -> cn.itcase.safe.c.b:
    java.util.List getAllContace(android.content.Context) -> a
    android.graphics.Bitmap getContectIcon(android.content.Context,java.lang.Long) -> a
cn.itcase.safe.utils.GZipUtils -> cn.itcase.safe.c.c:
    void unZip(java.io.InputStream,java.io.OutputStream) -> a
    void close(java.io.Closeable) -> a
cn.itcase.safe.utils.Md5Utils -> cn.itcase.safe.c.d:
    java.lang.String deMd5(java.io.InputStream) -> a
cn.itcase.safe.utils.MyToast -> cn.itcase.safe.c.e:
    android.view.WindowManager mWM -> a
    android.content.Context mContext -> b
    android.view.WindowManager$LayoutParams mParams -> c
    android.view.View mView -> f
    float startX -> d
    float startY -> e
    void show(java.lang.String) -> a
    void hide() -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
cn.itcase.safe.utils.PackageUtils -> cn.itcase.safe.c.f:
    java.lang.String getVersionName(android.content.Context) -> a
    int getVersionCode(android.content.Context) -> b
cn.itcase.safe.utils.PreferenceUtils -> cn.itcase.safe.c.g:
    android.content.SharedPreferences sp -> a
    android.content.SharedPreferences getPreferences(android.content.Context) -> a
    boolean getBoolean(android.content.Context,java.lang.String) -> a
    boolean getBoolean(android.content.Context,java.lang.String,boolean) -> a
    void putBoolean(android.content.Context,java.lang.String,boolean) -> b
    java.lang.String getString(android.content.Context,java.lang.String) -> b
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> a
    void putString(android.content.Context,java.lang.String,java.lang.String) -> b
    int getInt(android.content.Context,java.lang.String,int) -> a
    void putInt(android.content.Context,java.lang.String,int) -> b
cn.itcase.safe.utils.ProcessInfoProvide -> cn.itcase.safe.c.h:
    int getAllRunningProcessCount(android.content.Context) -> a
    int getTotalPssCount(android.content.Context) -> b
    java.util.List getAllRunningProcess(android.content.Context) -> c
    long getFreeMomory(android.content.Context) -> d
    long getTotalMomory(android.content.Context) -> e
    long getLowTotalMomory() -> a
    void killProcess(android.content.Context,java.lang.String) -> a
cn.itcase.safe.utils.ServiceStartUitls -> cn.itcase.safe.c.i:
    boolean isRunning(android.content.Context,java.lang.Class) -> a
cn.itcase.safe.utils.SmsProvider -> cn.itcase.safe.c.j:
    void saveAllSms(android.content.Context,cn.itcase.safe.utils.SmsProvider$OnSmsListener) -> a
    void recoveryAllSms(android.content.Context,cn.itcase.safe.utils.SmsProvider$OnSmsListener) -> b
cn.itcase.safe.utils.SmsProvider$1 -> cn.itcase.safe.c.k:
    android.content.Context val$context -> a
    cn.itcase.safe.utils.SmsProvider$OnSmsListener val$listenter -> b
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
cn.itcase.safe.utils.SmsProvider$2 -> cn.itcase.safe.c.l:
    android.content.Context val$context -> a
    cn.itcase.safe.utils.SmsProvider$OnSmsListener val$listenter -> b
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
cn.itcase.safe.utils.SmsProvider$OnSmsListener -> cn.itcase.safe.c.m:
    void onMax(int) -> a
    void onProgress(int) -> b
    void onSucess() -> a
    void onFailed() -> b
cn.itcase.safe.utils.SmsProvider$SmsInfo -> cn.itcase.safe.c.n:
    java.lang.String address -> a
    java.lang.String type -> b
    java.lang.String date -> c
    java.lang.String body -> d
cn.itcase.safe.view.AppLockManagerView -> cn.itcase.safe.view.AppLockManagerView:
    android.view.View mView -> a
    android.widget.TextView mTvLock -> b
    android.widget.TextView mTvUnLock -> c
    boolean isLift -> d
    cn.itcase.safe.view.AppLockManagerView$SelectLockListent mListent -> e
    void selectLock(cn.itcase.safe.view.AppLockManagerView$SelectLockListent) -> a
    boolean access$0(cn.itcase.safe.view.AppLockManagerView) -> a
    android.widget.TextView access$1(cn.itcase.safe.view.AppLockManagerView) -> b
    void access$2(cn.itcase.safe.view.AppLockManagerView,boolean) -> a
    android.widget.TextView access$3(cn.itcase.safe.view.AppLockManagerView) -> c
    cn.itcase.safe.view.AppLockManagerView$SelectLockListent access$4(cn.itcase.safe.view.AppLockManagerView) -> d
cn.itcase.safe.view.AppLockManagerView$Lock -> cn.itcase.safe.view.a:
    cn.itcase.safe.view.AppLockManagerView this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.view.AppLockManagerView$SelectLockListent -> cn.itcase.safe.view.b:
    void onIsLife(boolean) -> a
cn.itcase.safe.view.AppLockManagerView$UnLock -> cn.itcase.safe.view.c:
    cn.itcase.safe.view.AppLockManagerView this$0 -> a
    void onClick(android.view.View) -> onClick
cn.itcase.safe.view.DialogAddress -> cn.itcase.safe.view.d:
    android.widget.AdapterView$OnItemClickListener mListener -> a
    android.widget.ListAdapter mListadapter -> b
    android.widget.ListView mDialogLv -> c
    void onCreate(android.os.Bundle) -> onCreate
    void setAdapter(android.widget.ListAdapter) -> a
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
cn.itcase.safe.view.FocusedTextView -> cn.itcase.safe.view.FocusedTextView:
    boolean isFocused() -> isFocused
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
cn.itcase.safe.view.MyProgress -> cn.itcase.safe.view.MyProgress:
    android.widget.TextView mTitle -> b
    android.widget.TextView mAble -> c
    android.widget.TextView mEnable -> d
    android.widget.ProgressBar mPro -> e
    android.view.View view -> a
    void setTitle(java.lang.String) -> setTitle
    void setAble(java.lang.String) -> setAble
    void setEnable(java.lang.String) -> setEnable
    void setProgressBar(int) -> setProgressBar
cn.itcase.safe.view.SettingItemView -> cn.itcase.safe.view.SettingItemView:
    android.widget.TextView mTvTitle -> a
    android.widget.ImageView mIvToggle -> b
    boolean isToggleEnable -> c
    boolean isToggleOn -> d
    void setToggleOn(boolean) -> setToggleOn
    void toggle() -> a
    boolean isToggleOn() -> b
com.github.lzyzsd.circleprogress.CircleProgress -> com.github.lzyzsd.circleprogress.CircleProgress:
    android.graphics.Paint textPaint -> a
    android.graphics.RectF rectF -> b
    float textSize -> c
    int textColor -> d
    int progress -> e
    int max -> f
    int finishedColor -> g
    int unfinishedColor -> h
    java.lang.String prefixText -> i
    java.lang.String suffixText -> j
    int default_finished_color -> k
    int default_unfinished_color -> l
    int default_text_color -> m
    int default_max -> n
    float default_text_size -> o
    int min_size -> p
    android.graphics.Paint paint -> q
    void initByAttributes(android.content.res.TypedArray) -> a
    void initPainters() -> a
    void invalidate() -> invalidate
    int getProgress() -> getProgress
    void setProgress(int) -> setProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    int getFinishedColor() -> getFinishedColor
    void setFinishedColor(int) -> setFinishedColor
    int getUnfinishedColor() -> getUnfinishedColor
    void setUnfinishedColor(int) -> setUnfinishedColor
    java.lang.String getPrefixText() -> getPrefixText
    void setPrefixText(java.lang.String) -> setPrefixText
    java.lang.String getSuffixText() -> getSuffixText
    void setSuffixText(java.lang.String) -> setSuffixText
    java.lang.String getDrawText() -> getDrawText
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    float getProgressPercentage() -> getProgressPercentage
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.github.lzyzsd.circleprogress.R -> com.github.lzyzsd.circleprogress.a:
com.github.lzyzsd.circleprogress.R$styleable -> com.github.lzyzsd.circleprogress.b:
    int CircleProgress_circle_unfinished_color -> CircleProgress_circle_unfinished_color
    int ArcProgress_arc_suffix_text_size -> ArcProgress_arc_suffix_text_size
    int DonutProgress_donut_inner_bottom_text_size -> DonutProgress_donut_inner_bottom_text_size
    int ArcProgress_arc_unfinished_color -> ArcProgress_arc_unfinished_color
    int ArcProgress_arc_bottom_text_size -> ArcProgress_arc_bottom_text_size
    int DonutProgress_donut_suffix_text -> DonutProgress_donut_suffix_text
    int DonutProgress_donut_unfinished_stroke_width -> DonutProgress_donut_unfinished_stroke_width
    int ArcProgress_arc_finished_color -> ArcProgress_arc_finished_color
    int DonutProgress_donut_background_color -> DonutProgress_donut_background_color
    int CircleProgress_circle_progress -> CircleProgress_circle_progress
    int ArcProgress_arc_stroke_width -> ArcProgress_arc_stroke_width
    int[] DonutProgress -> DonutProgress
    int CircleProgress_circle_prefix_text -> CircleProgress_circle_prefix_text
    int DonutProgress_donut_text_size -> DonutProgress_donut_text_size
    int CircleProgress_circle_suffix_text -> CircleProgress_circle_suffix_text
    int ArcProgress_arc_angle -> ArcProgress_arc_angle
    int CircleProgress_circle_max -> CircleProgress_circle_max
    int CircleProgress_circle_finished_color -> CircleProgress_circle_finished_color
    int CircleProgress_circle_text_size -> CircleProgress_circle_text_size
    int DonutProgress_donut_unfinished_color -> DonutProgress_donut_unfinished_color
    int[] CircleProgress -> CircleProgress
    int ArcProgress_arc_suffix_text_padding -> ArcProgress_arc_suffix_text_padding
    int ArcProgress_arc_text_size -> ArcProgress_arc_text_size
    int Themes_donutProgressStyle -> Themes_donutProgressStyle
    int CircleProgress_circle_text_color -> CircleProgress_circle_text_color
    int DonutProgress_donut_finished_stroke_width -> DonutProgress_donut_finished_stroke_width
    int ArcProgress_arc_suffix_text -> ArcProgress_arc_suffix_text
    int ArcProgress_arc_progress -> ArcProgress_arc_progress
    int DonutProgress_donut_text_color -> DonutProgress_donut_text_color
    int DonutProgress_donut_progress -> DonutProgress_donut_progress
    int Themes_arcProgressStyle -> Themes_arcProgressStyle
    int ArcProgress_arc_text_color -> ArcProgress_arc_text_color
    int[] Themes -> Themes
    int DonutProgress_donut_prefix_text -> DonutProgress_donut_prefix_text
    int DonutProgress_donut_finished_color -> DonutProgress_donut_finished_color
    int DonutProgress_donut_circle_starting_degree -> DonutProgress_donut_circle_starting_degree
    int DonutProgress_donut_inner_bottom_text_color -> DonutProgress_donut_inner_bottom_text_color
    int ArcProgress_arc_bottom_text -> ArcProgress_arc_bottom_text
    int[] ArcProgress -> ArcProgress
    int DonutProgress_donut_inner_bottom_text -> DonutProgress_donut_inner_bottom_text
    int Themes_circleProgressStyle -> Themes_circleProgressStyle
    int DonutProgress_donut_text -> DonutProgress_donut_text
    int DonutProgress_donut_max -> DonutProgress_donut_max
    int ArcProgress_arc_max -> ArcProgress_arc_max
com.github.lzyzsd.circleprogress.Utils -> com.github.lzyzsd.circleprogress.c:
    float dp2px(android.content.res.Resources,float) -> a
    float sp2px(android.content.res.Resources,float) -> b
com.lidroid.xutils.HttpUtils -> com.a.a.a:
    com.lidroid.xutils.http.HttpCache sHttpCache -> a
    org.apache.http.impl.client.DefaultHttpClient httpClient -> b
    org.apache.http.protocol.HttpContext httpContext -> c
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> d
    java.lang.String responseTextCharset -> e
    long currentRequestExpiry -> f
    com.lidroid.xutils.task.PriorityExecutor EXECUTOR -> g
    com.lidroid.xutils.HttpUtils configTimeout(int) -> a
    com.lidroid.xutils.HttpUtils configSoTimeout(int) -> b
    com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> a
    com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> a
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> a
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> a
    com.lidroid.xutils.http.HttpHandler sendRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> a
com.lidroid.xutils.HttpUtils$1 -> com.a.a.b:
    com.lidroid.xutils.HttpUtils this$0 -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.HttpUtils$2 -> com.a.a.c:
    com.lidroid.xutils.HttpUtils this$0 -> a
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.cache.KeyExpiryMap -> com.a.a.a.a:
    java.lang.Long get(java.lang.Object) -> a
    java.lang.Long put(java.lang.Object,java.lang.Long) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Long remove(java.lang.Object) -> b
    void clear() -> clear
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.lidroid.xutils.cache.LruMemoryCache -> com.a.a.a.b:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    com.lidroid.xutils.cache.KeyExpiryMap keyExpiryMap -> i
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object,long) -> a
    void trimToSize(int) -> a
    java.lang.Object remove(java.lang.Object) -> b
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> c
    int safeSizeOf(java.lang.Object,java.lang.Object) -> b
    int sizeOf(java.lang.Object,java.lang.Object) -> a
    java.lang.String toString() -> toString
com.lidroid.xutils.exception.BaseException -> com.a.a.b.a:
com.lidroid.xutils.exception.HttpException -> com.a.a.b.b:
    int exceptionCode -> a
com.lidroid.xutils.http.HttpCache -> com.a.a.c.a:
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> a
    int cacheSize -> b
    long defaultExpiryTime -> c
    java.util.concurrent.ConcurrentHashMap httpMethod_enabled_map -> d
    long getDefaultExpiryTime() -> a
    void put(java.lang.String,java.lang.String,long) -> a
    java.lang.String get(java.lang.String) -> a
    boolean isEnabled(java.lang.String) -> b
com.lidroid.xutils.http.HttpCache$1 -> com.a.a.c.b:
    com.lidroid.xutils.http.HttpCache this$0 -> a
    int sizeOf(java.lang.String,java.lang.String) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> a
com.lidroid.xutils.http.HttpHandler -> com.a.a.c.c:
    org.apache.http.impl.client.AbstractHttpClient client -> b
    org.apache.http.protocol.HttpContext context -> c
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> d
    java.lang.String requestUrl -> e
    java.lang.String requestMethod -> f
    org.apache.http.client.methods.HttpRequestBase request -> g
    boolean isUploading -> h
    com.lidroid.xutils.http.callback.RequestCallBack callback -> i
    int retriedCount -> j
    java.lang.String fileSavePath -> k
    boolean isDownloadingFile -> l
    boolean autoResume -> m
    boolean autoRename -> n
    java.lang.String charset -> o
    com.lidroid.xutils.http.HttpHandler$State state -> p
    long expiry -> q
    long lastUpdateTime -> r
    com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler notUseApacheRedirectHandler -> s
    void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> a
    void setExpiry(long) -> a
    com.lidroid.xutils.http.ResponseInfo sendRequest(org.apache.http.client.methods.HttpRequestBase) -> a
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    com.lidroid.xutils.http.ResponseInfo handleResponse(org.apache.http.HttpResponse) -> a
    boolean updateProgress(long,long,boolean) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> c
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler -> com.a.a.c.d:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.lidroid.xutils.http.HttpHandler$State -> com.a.a.c.e:
    com.lidroid.xutils.http.HttpHandler$State WAITING -> a
    com.lidroid.xutils.http.HttpHandler$State STARTED -> b
    com.lidroid.xutils.http.HttpHandler$State LOADING -> c
    com.lidroid.xutils.http.HttpHandler$State FAILURE -> d
    com.lidroid.xutils.http.HttpHandler$State CANCELLED -> e
    com.lidroid.xutils.http.HttpHandler$State SUCCESS -> f
    int value -> g
    com.lidroid.xutils.http.HttpHandler$State[] ENUM$VALUES -> h
    com.lidroid.xutils.http.HttpHandler$State[] values() -> values
    com.lidroid.xutils.http.HttpHandler$State valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.RequestParams -> com.a.a.c.f:
    java.lang.String charset -> a
    java.util.List headers -> b
    java.util.List queryStringParams -> c
    org.apache.http.HttpEntity bodyEntity -> d
    java.util.List bodyParams -> e
    java.util.HashMap fileParams -> f
    com.lidroid.xutils.task.Priority priority -> g
    com.lidroid.xutils.task.Priority getPriority() -> a
    java.lang.String getCharset() -> b
    void addQueryStringParameter(java.lang.String,java.lang.String) -> a
    org.apache.http.HttpEntity getEntity() -> c
    java.util.List getQueryStringParams() -> d
    java.util.List getHeaders() -> e
com.lidroid.xutils.http.RequestParams$HeaderItem -> com.a.a.c.g:
    boolean overwrite -> a
    org.apache.http.Header header -> b
com.lidroid.xutils.http.ResponseInfo -> com.a.a.c.h:
    org.apache.http.HttpResponse response -> j
    java.lang.Object result -> a
    boolean resultFormCache -> b
    java.util.Locale locale -> c
    int statusCode -> d
    org.apache.http.ProtocolVersion protocolVersion -> e
    java.lang.String reasonPhrase -> f
    long contentLength -> g
    org.apache.http.Header contentType -> h
    org.apache.http.Header contentEncoding -> i
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler -> com.a.a.c.a.a:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> a
com.lidroid.xutils.http.callback.FileDownloadHandler -> com.a.a.c.a.b:
    java.io.File handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String,boolean,java.lang.String) -> a
com.lidroid.xutils.http.callback.HttpRedirectHandler -> com.a.a.c.a.c:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> a
com.lidroid.xutils.http.callback.RequestCallBack -> com.a.a.c.a.d:
    java.lang.String requestUrl -> a
    int rate -> b
    int getRate() -> a
    void setRequestUrl(java.lang.String) -> a
    void onStart() -> b
    void onLoading(long,long,boolean) -> a
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> a
com.lidroid.xutils.http.callback.RequestCallBackHandler -> com.a.a.c.a.e:
    boolean updateProgress(long,long,boolean) -> a
com.lidroid.xutils.http.callback.StringDownloadHandler -> com.a.a.c.a.f:
    java.lang.String handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String) -> a
com.lidroid.xutils.http.client.DefaultSSLSocketFactory -> com.a.a.c.b.a:
    javax.net.ssl.SSLContext sslContext -> a
    java.security.KeyStore trustStore -> b
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory instance -> c
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory getSocketFactory() -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1 -> com.a.a.c.b.b:
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory this$0 -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.http.client.HttpRequest -> com.a.a.c.b.c:
    org.apache.http.HttpEntity entity -> a
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod method -> b
    com.lidroid.xutils.http.client.util.URIBuilder uriBuilder -> c
    java.nio.charset.Charset uriCharset -> d
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParams(java.util.List) -> a
    void setRequestParams(com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    void setURI(java.lang.String) -> a
    java.lang.String getMethod() -> getMethod
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.HttpRequest$HttpMethod -> com.a.a.c.b.d:
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod GET -> a
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod POST -> b
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod PUT -> c
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod HEAD -> d
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod MOVE -> e
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod COPY -> f
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod DELETE -> g
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod OPTIONS -> h
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod TRACE -> i
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod CONNECT -> j
    java.lang.String value -> k
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] ENUM$VALUES -> l
    java.lang.String toString() -> toString
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] values() -> values
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.RetryHandler -> com.a.a.c.b.e:
    java.util.HashSet exceptionWhiteList -> a
    java.util.HashSet exceptionBlackList -> b
    int maxRetries -> c
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
com.lidroid.xutils.http.client.entity.BodyParamsEntity -> com.a.a.c.b.a.a:
    byte[] content -> a
    boolean dirty -> b
    java.lang.String charset -> c
    java.util.List params -> d
    void refreshContent() -> a
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.entity.DecompressingEntity -> com.a.a.c.b.a.b:
    java.io.InputStream content -> a
    long uncompressedLength -> b
    long uploadedSize -> c
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> d
    java.io.InputStream decorate(java.io.InputStream) -> a
    java.io.InputStream getDecompressingStream() -> a
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity -> com.a.a.c.b.a.c:
    java.io.InputStream decorate(java.io.InputStream) -> a
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.entity.UploadEntity -> com.a.a.c.b.a.d:
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
com.lidroid.xutils.http.client.multipart.FormBodyPart -> com.a.a.c.b.b.a:
    java.lang.String name -> a
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader header -> b
    com.lidroid.xutils.http.client.multipart.content.ContentBody body -> c
    java.lang.String getName() -> a
    com.lidroid.xutils.http.client.multipart.content.ContentBody getBody() -> b
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader getHeader() -> c
    void addField(java.lang.String,java.lang.String) -> a
    void generateContentDisposition(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> a
    void generateContentType(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> b
    void generateTransferEncoding(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> c
com.lidroid.xutils.http.client.multipart.HttpMultipart -> com.a.a.c.b.b.b:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> a
    org.apache.http.util.ByteArrayBuffer CR_LF -> b
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> c
    java.lang.String subType -> d
    java.nio.charset.Charset charset -> e
    java.lang.String boundary -> f
    java.util.List parts -> g
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode mode -> h
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode -> i
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> a
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.io.OutputStream) -> a
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.io.OutputStream) -> a
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> a
    java.util.List getBodyParts() -> a
    void addBodyPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> a
    java.lang.String getBoundary() -> b
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,boolean) -> a
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo,boolean) -> a
    void writeTo(java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> a
    long getTotalLength() -> c
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode() -> d
com.lidroid.xutils.http.client.multipart.HttpMultipartMode -> com.a.a.c.b.b.c:
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode STRICT -> a
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode BROWSER_COMPATIBLE -> b
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] ENUM$VALUES -> c
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] values() -> values
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.multipart.MIME -> com.a.a.c.b.b.d:
    java.nio.charset.Charset DEFAULT_CHARSET -> a
com.lidroid.xutils.http.client.multipart.MinimalField -> com.a.a.c.b.b.e:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.String getName() -> a
    java.lang.String getBody() -> b
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader -> com.a.a.c.b.b.f:
    java.util.List fields -> a
    java.util.Map fieldMap -> b
    void addField(com.lidroid.xutils.http.client.multipart.MinimalField) -> a
    com.lidroid.xutils.http.client.multipart.MinimalField getField(java.lang.String) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MultipartEntity -> com.a.a.c.b.b.g:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> a
    char[] MULTIPART_CHARS -> b
    com.lidroid.xutils.http.client.multipart.HttpMultipart multipart -> c
    org.apache.http.Header contentType -> d
    long length -> e
    boolean dirty -> f
    java.lang.String boundary -> g
    java.nio.charset.Charset charset -> h
    java.lang.String multipartSubtype -> i
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> a
    java.lang.String generateBoundary() -> a
    void addPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> a
    void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody) -> a
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo -> com.a.a.c.b.b.h:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo DEFAULT -> a
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> b
    long totalLength -> c
    long pos -> d
    boolean doCallBack(boolean) -> a
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody -> com.a.a.c.b.b.a.a:
    java.lang.String mimeType -> b
    java.lang.String mediaType -> c
    java.lang.String subType -> d
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> a
    java.lang.String getMimeType() -> a
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> a
com.lidroid.xutils.http.client.multipart.content.ContentBody -> com.a.a.c.b.b.a.b:
    java.lang.String getFilename() -> b
    void writeTo(java.io.OutputStream) -> a
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> a
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor -> com.a.a.c.b.b.a.c:
    java.lang.String getMimeType() -> a
    java.lang.String getCharset() -> c
    java.lang.String getTransferEncoding() -> d
    long getContentLength() -> e
com.lidroid.xutils.http.client.multipart.content.StringBody -> com.a.a.c.b.b.a.d:
    byte[] content -> b
    java.nio.charset.Charset charset -> c
    void writeTo(java.io.OutputStream) -> a
    java.lang.String getTransferEncoding() -> d
    java.lang.String getCharset() -> c
    long getContentLength() -> e
    java.lang.String getFilename() -> b
com.lidroid.xutils.http.client.util.URIBuilder -> com.a.a.c.b.c.a:
    java.lang.String scheme -> a
    java.lang.String encodedSchemeSpecificPart -> b
    java.lang.String encodedAuthority -> c
    java.lang.String userInfo -> d
    java.lang.String encodedUserInfo -> e
    java.lang.String host -> f
    int port -> g
    java.lang.String path -> h
    java.lang.String encodedPath -> i
    java.lang.String encodedQuery -> j
    java.util.List queryParams -> k
    java.lang.String fragment -> l
    java.lang.String encodedFragment -> m
    void digestURI(java.net.URI) -> a
    java.util.List parseQuery(java.lang.String) -> a
    java.net.URI build(java.nio.charset.Charset) -> a
    java.lang.String buildString(java.nio.charset.Charset) -> b
    java.lang.String encodeUserInfo(java.lang.String,java.nio.charset.Charset) -> a
    java.lang.String encodePath(java.lang.String,java.nio.charset.Charset) -> b
    java.lang.String encodeQuery(java.util.List,java.nio.charset.Charset) -> a
    java.lang.String encodeFragment(java.lang.String,java.nio.charset.Charset) -> c
    com.lidroid.xutils.http.client.util.URIBuilder addParameter(java.lang.String,java.lang.String) -> a
    java.lang.String normalizePath(java.lang.String) -> b
com.lidroid.xutils.http.client.util.URLEncodedUtils -> com.a.a.c.b.c.b:
    char[] DELIM -> a
    java.util.BitSet UNRESERVED -> b
    java.util.BitSet PUNCT -> c
    java.util.BitSet USERINFO -> d
    java.util.BitSet PATHSAFE -> e
    java.util.BitSet FRAGMENT -> f
    java.util.BitSet RESERVED -> g
    java.util.BitSet URLENCODER -> h
    java.util.List parse(java.lang.String) -> a
    java.lang.String format(java.util.List,java.lang.String) -> a
    java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> a
    java.lang.String urlencode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> a
    java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> a
    java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> d
    java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> a
    java.lang.String encFragment(java.lang.String,java.nio.charset.Charset) -> b
    java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> c
com.lidroid.xutils.task.Node -> com.a.a.d.a:
    boolean valueAsT -> b
    com.lidroid.xutils.task.PriorityObject value -> c
    com.lidroid.xutils.task.Node next -> a
    com.lidroid.xutils.task.Priority getPriority() -> a
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
com.lidroid.xutils.task.Priority -> com.a.a.d.b:
    com.lidroid.xutils.task.Priority UI_TOP -> a
    com.lidroid.xutils.task.Priority UI_NORMAL -> b
    com.lidroid.xutils.task.Priority UI_LOW -> c
    com.lidroid.xutils.task.Priority DEFAULT -> d
    com.lidroid.xutils.task.Priority BG_TOP -> e
    com.lidroid.xutils.task.Priority BG_NORMAL -> f
    com.lidroid.xutils.task.Priority BG_LOW -> g
    com.lidroid.xutils.task.Priority[] ENUM$VALUES -> h
    com.lidroid.xutils.task.Priority[] values() -> values
    com.lidroid.xutils.task.Priority valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.task.PriorityAsyncTask -> com.a.a.d.c:
    com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler sHandler -> b
    java.util.concurrent.Executor sDefaultExecutor -> a
    com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable mWorker -> c
    java.util.concurrent.FutureTask mFuture -> d
    boolean mExecuteInvoked -> e
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> f
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> g
    com.lidroid.xutils.task.Priority priority -> h
    void setPriority(com.lidroid.xutils.task.Priority) -> a
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> c
    void onPreExecute() -> a
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> b
    boolean isCancelled() -> c
    com.lidroid.xutils.task.PriorityAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void publishProgress(java.lang.Object[]) -> d
    void finish(java.lang.Object) -> e
    void access$0(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> a
    java.util.concurrent.atomic.AtomicBoolean access$1(com.lidroid.xutils.task.PriorityAsyncTask) -> a
    java.lang.Object access$2(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> b
    void access$3(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> c
com.lidroid.xutils.task.PriorityAsyncTask$1 -> com.a.a.d.d:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> a
    java.lang.Object call() -> call
com.lidroid.xutils.task.PriorityAsyncTask$2 -> com.a.a.d.e:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> a
    void done() -> done
com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult -> com.a.a.d.f:
    com.lidroid.xutils.task.PriorityAsyncTask mTask -> a
    java.lang.Object[] mData -> b
com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler -> com.a.a.d.g:
    void handleMessage(android.os.Message) -> handleMessage
com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable -> com.a.a.d.h:
    java.lang.Object[] mParams -> b
com.lidroid.xutils.task.PriorityExecutor -> com.a.a.d.i:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue mPoolWorkQueue -> b
    java.util.concurrent.ThreadPoolExecutor mThreadPoolExecutor -> c
    void execute(java.lang.Runnable) -> execute
com.lidroid.xutils.task.PriorityExecutor$1 -> com.a.a.d.j:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.lidroid.xutils.task.PriorityObject -> com.a.a.d.k:
    com.lidroid.xutils.task.Priority priority -> a
    java.lang.Object obj -> b
com.lidroid.xutils.task.PriorityObjectBlockingQueue -> com.a.a.d.l:
    int capacity -> b
    java.util.concurrent.atomic.AtomicInteger count -> c
    com.lidroid.xutils.task.Node head -> a
    com.lidroid.xutils.task.Node last -> d
    java.util.concurrent.locks.ReentrantLock takeLock -> e
    java.util.concurrent.locks.Condition notEmpty -> f
    java.util.concurrent.locks.ReentrantLock putLock -> g
    java.util.concurrent.locks.Condition notFull -> h
    void signalNotEmpty() -> c
    void signalNotFull() -> d
    java.lang.Object opQueue(com.lidroid.xutils.task.Node) -> a
    void _enqueue(com.lidroid.xutils.task.Node) -> b
    java.lang.Object _dequeue() -> e
    void fullyLock() -> a
    void fullyUnlock() -> b
    int size() -> size
    int remainingCapacity() -> remainingCapacity
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    boolean offer(java.lang.Object) -> offer
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object poll() -> poll
    java.lang.Object peek() -> peek
    void unlink(com.lidroid.xutils.task.Node,com.lidroid.xutils.task.Node) -> a
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    void clear() -> clear
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    java.util.Iterator iterator() -> iterator
com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr -> com.a.a.d.m:
    com.lidroid.xutils.task.Node current -> b
    com.lidroid.xutils.task.Node lastRet -> c
    java.lang.Object currentElement -> d
    com.lidroid.xutils.task.PriorityObjectBlockingQueue this$0 -> a
    boolean hasNext() -> hasNext
    com.lidroid.xutils.task.Node nextNode(com.lidroid.xutils.task.Node) -> a
    java.lang.Object next() -> next
    void remove() -> remove
com.lidroid.xutils.task.PriorityRunnable -> com.a.a.d.n:
    void run() -> run
com.lidroid.xutils.util.CharsetUtils -> com.a.a.e.a:
    java.util.List SUPPORT_CHARSET -> a
    java.lang.String toCharset(java.lang.String,java.lang.String,int) -> a
    java.lang.String getEncoding(java.lang.String,int) -> a
    boolean isCharset(java.lang.String,java.lang.String,int) -> b
com.lidroid.xutils.util.IOUtils -> com.a.a.e.b:
    void closeQuietly(java.io.Closeable) -> a
com.lidroid.xutils.util.LogUtils -> com.a.a.e.c:
    java.lang.String customTagPrefix -> a
    boolean allowD -> b
    boolean allowE -> c
    boolean allowI -> d
    boolean allowV -> e
    boolean allowW -> f
    boolean allowWtf -> g
    com.lidroid.xutils.util.LogUtils$CustomLogger customLogger -> h
    java.lang.String generateTag(java.lang.StackTraceElement) -> a
    void d(java.lang.String) -> a
    void e(java.lang.String) -> b
    void e(java.lang.String,java.lang.Throwable) -> a
    void w(java.lang.Throwable) -> a
com.lidroid.xutils.util.LogUtils$CustomLogger -> com.a.a.e.d:
    void d(java.lang.String,java.lang.String) -> a
    void e(java.lang.String,java.lang.String) -> b
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void w(java.lang.String,java.lang.Throwable) -> a
com.lidroid.xutils.util.OtherUtils -> com.a.a.e.e:
    java.lang.String getUserAgent(android.content.Context) -> a
    boolean isSupportRange(org.apache.http.HttpResponse) -> a
    java.lang.String getFileNameFromHttpResponse(org.apache.http.HttpResponse) -> b
    java.nio.charset.Charset getCharsetFromHttpRequest(org.apache.http.client.methods.HttpRequestBase) -> a
    long sizeOfString(java.lang.String,java.lang.String) -> a
    java.lang.String getSubString(java.lang.String,int,int) -> a
    java.lang.StackTraceElement getCallerStackTraceElement() -> a
org.acra.ACRA -> org.acra.ACRA:
    boolean DEV_LOGGING -> DEV_LOGGING
    java.lang.String LOG_TAG -> LOG_TAG
    org.acra.log.ACRALog log -> log
    java.lang.String PREF_DISABLE_ACRA -> PREF_DISABLE_ACRA
    java.lang.String PREF_ENABLE_ACRA -> PREF_ENABLE_ACRA
    java.lang.String PREF_ENABLE_SYSTEM_LOGS -> PREF_ENABLE_SYSTEM_LOGS
    java.lang.String PREF_ENABLE_DEVICE_ID -> PREF_ENABLE_DEVICE_ID
    java.lang.String PREF_USER_EMAIL_ADDRESS -> PREF_USER_EMAIL_ADDRESS
    java.lang.String PREF_ALWAYS_ACCEPT -> PREF_ALWAYS_ACCEPT
    java.lang.String PREF_LAST_VERSION_NR -> PREF_LAST_VERSION_NR
    android.app.Application mApplication -> mApplication
    org.acra.ErrorReporter errorReporterSingleton -> errorReporterSingleton
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mPrefListener -> mPrefListener
    org.acra.ACRAConfiguration configProxy -> configProxy
    void init(android.app.Application) -> init
    void init(android.app.Application,org.acra.ACRAConfiguration) -> init
    void init(android.app.Application,org.acra.ACRAConfiguration,boolean) -> init
    org.acra.ErrorReporter getErrorReporter() -> getErrorReporter
    boolean shouldDisableACRA(android.content.SharedPreferences) -> shouldDisableACRA
    void checkCrashResources(org.acra.annotation.ReportsCrashes) -> checkCrashResources
    android.content.SharedPreferences getACRASharedPreferences() -> getACRASharedPreferences
    org.acra.ACRAConfiguration getConfig() -> getConfig
    void setConfig(org.acra.ACRAConfiguration) -> setConfig
    org.acra.ACRAConfiguration getNewDefaultConfig(android.app.Application) -> getNewDefaultConfig
    boolean isDebuggable() -> isDebuggable
    android.app.Application getApplication() -> getApplication
    void setLog(org.acra.log.ACRALog) -> setLog
    boolean access$000(android.content.SharedPreferences) -> access$000
org.acra.ACRA$1 -> org.acra.ACRA$1:
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.acra.ACRA$2 -> org.acra.ACRA$2:
    int[] $SwitchMap$org$acra$ReportingInteractionMode -> $SwitchMap$org$acra$ReportingInteractionMode
org.acra.ACRAConfiguration -> org.acra.ACRAConfiguration:
    org.acra.util.ReflectionHelper reflectionHelper -> reflectionHelper
    java.lang.String[] mAdditionalDropboxTags -> mAdditionalDropboxTags
    java.lang.String[] mAdditionalSharedPreferences -> mAdditionalSharedPreferences
    java.lang.Integer mConnectionTimeout -> mConnectionTimeout
    org.acra.ReportField[] mCustomReportContent -> mCustomReportContent
    java.lang.Boolean mDeleteUnapprovedReportsOnApplicationStart -> mDeleteUnapprovedReportsOnApplicationStart
    java.lang.Boolean mDeleteOldUnsentReportsOnApplicationStart -> mDeleteOldUnsentReportsOnApplicationStart
    java.lang.Integer mDropboxCollectionMinutes -> mDropboxCollectionMinutes
    java.lang.Boolean mForceCloseDialogAfterToast -> mForceCloseDialogAfterToast
    java.lang.String mFormUri -> mFormUri
    java.lang.String mFormUriBasicAuthLogin -> mFormUriBasicAuthLogin
    java.lang.String mFormUriBasicAuthPassword -> mFormUriBasicAuthPassword
    java.lang.Boolean mIncludeDropboxSystemTags -> mIncludeDropboxSystemTags
    java.lang.String[] mLogcatArguments -> mLogcatArguments
    java.lang.String mMailTo -> mMailTo
    java.lang.Integer mMaxNumberOfRequestRetries -> mMaxNumberOfRequestRetries
    org.acra.ReportingInteractionMode mMode -> mMode
    org.acra.annotation.ReportsCrashes mReportsCrashes -> mReportsCrashes
    java.lang.Class mReportDialogClass -> mReportDialogClass
    java.lang.Integer mResDialogPositiveButtonText -> mResDialogPositiveButtonText
    java.lang.Integer mResDialogNegativeButtonText -> mResDialogNegativeButtonText
    java.lang.Integer mResDialogCommentPrompt -> mResDialogCommentPrompt
    java.lang.Integer mResDialogEmailPrompt -> mResDialogEmailPrompt
    java.lang.Integer mResDialogIcon -> mResDialogIcon
    java.lang.Integer mResDialogOkToast -> mResDialogOkToast
    java.lang.Integer mResDialogText -> mResDialogText
    java.lang.Integer mResDialogTitle -> mResDialogTitle
    java.lang.Integer mResNotifIcon -> mResNotifIcon
    java.lang.Integer mResNotifText -> mResNotifText
    java.lang.Integer mResNotifTickerText -> mResNotifTickerText
    java.lang.Integer mResNotifTitle -> mResNotifTitle
    java.lang.Integer mResToastText -> mResToastText
    java.lang.Integer mSharedPreferenceMode -> mSharedPreferenceMode
    java.lang.String mSharedPreferenceName -> mSharedPreferenceName
    java.lang.Integer mSocketTimeout -> mSocketTimeout
    java.lang.Boolean mLogcatFilterByPid -> mLogcatFilterByPid
    java.lang.Boolean mSendReportsInDevMode -> mSendReportsInDevMode
    java.lang.Boolean mSendReportsAtShutdown -> mSendReportsAtShutdown
    java.lang.String[] mExcludeMatchingSharedPreferencesKeys -> mExcludeMatchingSharedPreferencesKeys
    java.lang.String[] mExcludeMatchingSettingsKeys -> mExcludeMatchingSettingsKeys
    java.lang.Class mBuildConfigClass -> mBuildConfigClass
    java.lang.String mApplicationLogFile -> mApplicationLogFile
    java.lang.Integer mApplicationLogFileLines -> mApplicationLogFileLines
    java.lang.Boolean mDisableSSLCertValidation -> mDisableSSLCertValidation
    java.lang.String mHttpsSocketFactoryFactoryClass -> mHttpsSocketFactoryFactoryClass
    org.acra.util.HttpsSocketFactoryFactory mHttpsSocketFactoryFactory -> mHttpsSocketFactoryFactory
    org.acra.sender.HttpSender$Method mHttpMethod -> mHttpMethod
    org.acra.sender.HttpSender$Type mReportType -> mReportType
    java.util.Map mHttpHeaders -> mHttpHeaders
    java.security.KeyStore mKeyStore -> mKeyStore
    org.acra.ACRAConfiguration setHttpHeaders(java.util.Map) -> setHttpHeaders
    java.util.Map getHttpHeaders() -> getHttpHeaders
    java.util.List getReportFields() -> getReportFields
    org.acra.ACRAConfiguration setAdditionalDropboxTags(java.lang.String[]) -> setAdditionalDropboxTags
    org.acra.ACRAConfiguration setAdditionalSharedPreferences(java.lang.String[]) -> setAdditionalSharedPreferences
    org.acra.ACRAConfiguration setConnectionTimeout(java.lang.Integer) -> setConnectionTimeout
    org.acra.ACRAConfiguration setCustomReportContent(org.acra.ReportField[]) -> setCustomReportContent
    org.acra.ACRAConfiguration setDeleteUnapprovedReportsOnApplicationStart(java.lang.Boolean) -> setDeleteUnapprovedReportsOnApplicationStart
    org.acra.ACRAConfiguration setDeleteOldUnsentReportsOnApplicationStart(java.lang.Boolean) -> setDeleteOldUnsentReportsOnApplicationStart
    org.acra.ACRAConfiguration setDropboxCollectionMinutes(java.lang.Integer) -> setDropboxCollectionMinutes
    org.acra.ACRAConfiguration setForceCloseDialogAfterToast(java.lang.Boolean) -> setForceCloseDialogAfterToast
    org.acra.ACRAConfiguration setFormUri(java.lang.String) -> setFormUri
    org.acra.ACRAConfiguration setFormUriBasicAuthLogin(java.lang.String) -> setFormUriBasicAuthLogin
    org.acra.ACRAConfiguration setFormUriBasicAuthPassword(java.lang.String) -> setFormUriBasicAuthPassword
    org.acra.ACRAConfiguration setIncludeDropboxSystemTags(java.lang.Boolean) -> setIncludeDropboxSystemTags
    org.acra.ACRAConfiguration setLogcatArguments(java.lang.String[]) -> setLogcatArguments
    org.acra.ACRAConfiguration setMailTo(java.lang.String) -> setMailTo
    org.acra.ACRAConfiguration setMaxNumberOfRequestRetries(java.lang.Integer) -> setMaxNumberOfRequestRetries
    org.acra.ACRAConfiguration setMode(org.acra.ReportingInteractionMode) -> setMode
    org.acra.ACRAConfiguration setResDialogPositiveButtonText(int) -> setResDialogPositiveButtonText
    org.acra.ACRAConfiguration setResDialogNegativeButtonText(int) -> setResDialogNegativeButtonText
    org.acra.ACRAConfiguration setReportDialogClass(java.lang.Class) -> setReportDialogClass
    org.acra.ACRAConfiguration setResDialogCommentPrompt(int) -> setResDialogCommentPrompt
    org.acra.ACRAConfiguration setResDialogEmailPrompt(int) -> setResDialogEmailPrompt
    org.acra.ACRAConfiguration setResDialogIcon(int) -> setResDialogIcon
    org.acra.ACRAConfiguration setResDialogOkToast(int) -> setResDialogOkToast
    org.acra.ACRAConfiguration setResDialogText(int) -> setResDialogText
    org.acra.ACRAConfiguration setResDialogTitle(int) -> setResDialogTitle
    org.acra.ACRAConfiguration setResNotifIcon(int) -> setResNotifIcon
    org.acra.ACRAConfiguration setResNotifText(int) -> setResNotifText
    org.acra.ACRAConfiguration setResNotifTickerText(int) -> setResNotifTickerText
    org.acra.ACRAConfiguration setResNotifTitle(int) -> setResNotifTitle
    org.acra.ACRAConfiguration setResToastText(int) -> setResToastText
    org.acra.ACRAConfiguration setSharedPreferenceMode(java.lang.Integer) -> setSharedPreferenceMode
    org.acra.ACRAConfiguration setSharedPreferenceName(java.lang.String) -> setSharedPreferenceName
    org.acra.ACRAConfiguration setSocketTimeout(java.lang.Integer) -> setSocketTimeout
    org.acra.ACRAConfiguration setLogcatFilterByPid(java.lang.Boolean) -> setLogcatFilterByPid
    org.acra.ACRAConfiguration setSendReportsInDevMode(java.lang.Boolean) -> setSendReportsInDevMode
    org.acra.ACRAConfiguration setSendReportsAtShutdown(java.lang.Boolean) -> setSendReportsAtShutdown
    org.acra.ACRAConfiguration setExcludeMatchingSharedPreferencesKeys(java.lang.String[]) -> setExcludeMatchingSharedPreferencesKeys
    org.acra.ACRAConfiguration setExcludeMatchingSettingsKeys(java.lang.String[]) -> setExcludeMatchingSettingsKeys
    org.acra.ACRAConfiguration setBuildConfigClass(java.lang.Class) -> setBuildConfigClass
    org.acra.ACRAConfiguration setApplicationLogFile(java.lang.String) -> setApplicationLogFile
    org.acra.ACRAConfiguration setApplicationLogFileLines(int) -> setApplicationLogFileLines
    org.acra.ACRAConfiguration setDisableSSLCertValidation(boolean) -> setDisableSSLCertValidation
    org.acra.ACRAConfiguration setHttpMethod(org.acra.sender.HttpSender$Method) -> setHttpMethod
    org.acra.ACRAConfiguration setReportType(org.acra.sender.HttpSender$Type) -> setReportType
    void setKeyStore(java.security.KeyStore) -> setKeyStore
    java.lang.String[] additionalDropBoxTags() -> additionalDropBoxTags
    java.lang.String[] additionalSharedPreferences() -> additionalSharedPreferences
    java.lang.Class annotationType() -> annotationType
    int connectionTimeout() -> connectionTimeout
    org.acra.ReportField[] customReportContent() -> customReportContent
    boolean deleteUnapprovedReportsOnApplicationStart() -> deleteUnapprovedReportsOnApplicationStart
    boolean deleteOldUnsentReportsOnApplicationStart() -> deleteOldUnsentReportsOnApplicationStart
    int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    boolean forceCloseDialogAfterToast() -> forceCloseDialogAfterToast
    java.lang.String formUri() -> formUri
    java.lang.String formUriBasicAuthLogin() -> formUriBasicAuthLogin
    java.lang.String formUriBasicAuthPassword() -> formUriBasicAuthPassword
    boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    java.lang.String[] logcatArguments() -> logcatArguments
    java.lang.String mailTo() -> mailTo
    int maxNumberOfRequestRetries() -> maxNumberOfRequestRetries
    org.acra.ReportingInteractionMode mode() -> mode
    int resDialogPositiveButtonText() -> resDialogPositiveButtonText
    int resDialogNegativeButtonText() -> resDialogNegativeButtonText
    int resDialogCommentPrompt() -> resDialogCommentPrompt
    int resDialogEmailPrompt() -> resDialogEmailPrompt
    int resDialogIcon() -> resDialogIcon
    int resDialogOkToast() -> resDialogOkToast
    int resDialogText() -> resDialogText
    int resDialogTitle() -> resDialogTitle
    int resNotifIcon() -> resNotifIcon
    int resNotifText() -> resNotifText
    int resNotifTickerText() -> resNotifTickerText
    int resNotifTitle() -> resNotifTitle
    int resToastText() -> resToastText
    int sharedPreferencesMode() -> sharedPreferencesMode
    java.lang.String sharedPreferencesName() -> sharedPreferencesName
    int socketTimeout() -> socketTimeout
    boolean logcatFilterByPid() -> logcatFilterByPid
    boolean sendReportsInDevMode() -> sendReportsInDevMode
    boolean sendReportsAtShutdown() -> sendReportsAtShutdown
    java.lang.String[] excludeMatchingSharedPreferencesKeys() -> excludeMatchingSharedPreferencesKeys
    java.lang.String[] excludeMatchingSettingsKeys() -> excludeMatchingSettingsKeys
    java.lang.Class buildConfigClass() -> buildConfigClass
    java.lang.String applicationLogFile() -> applicationLogFile
    int applicationLogFileLines() -> applicationLogFileLines
    boolean disableSSLCertValidation() -> disableSSLCertValidation
    java.lang.String httpsSocketFactoryFactoryClass() -> httpsSocketFactoryFactoryClass
    java.lang.Class reportDialogClass() -> reportDialogClass
    void setHttpsSocketFactoryFactory(org.acra.util.HttpsSocketFactoryFactory) -> setHttpsSocketFactoryFactory
    org.acra.util.HttpsSocketFactoryFactory getHttpSocketFactoryFactory() -> getHttpSocketFactoryFactory
    org.acra.sender.HttpSender$Method httpMethod() -> httpMethod
    org.acra.sender.HttpSender$Type reportType() -> reportType
    java.security.KeyStore keyStore() -> keyStore
    boolean isNull(java.lang.String) -> isNull
org.acra.ACRAConfigurationException -> org.acra.ACRAConfigurationException:
    long serialVersionUID -> serialVersionUID
org.acra.ACRAConstants -> org.acra.ACRAConstants:
    java.lang.String REPORTFILE_EXTENSION -> REPORTFILE_EXTENSION
    java.lang.String APPROVED_SUFFIX -> APPROVED_SUFFIX
    java.lang.String SILENT_SUFFIX -> SILENT_SUFFIX
    int MAX_SEND_REPORTS -> MAX_SEND_REPORTS
    java.lang.String EXTRA_REPORT_FILE_NAME -> EXTRA_REPORT_FILE_NAME
    java.lang.String EXTRA_REPORT_EXCEPTION -> EXTRA_REPORT_EXCEPTION
    java.lang.String EXTRA_FORCE_CANCEL -> EXTRA_FORCE_CANCEL
    int NOTIF_CRASH_ID -> NOTIF_CRASH_ID
    int TOAST_WAIT_DURATION -> TOAST_WAIT_DURATION
    java.lang.String NULL_VALUE -> NULL_VALUE
    boolean DEFAULT_FORCE_CLOSE_DIALOG_AFTER_TOAST -> DEFAULT_FORCE_CLOSE_DIALOG_AFTER_TOAST
    int DEFAULT_MAX_NUMBER_OF_REQUEST_RETRIES -> DEFAULT_MAX_NUMBER_OF_REQUEST_RETRIES
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    int DEFAULT_CONNECTION_TIMEOUT -> DEFAULT_CONNECTION_TIMEOUT
    boolean DEFAULT_DELETE_UNAPPROVED_REPORTS_ON_APPLICATION_START -> DEFAULT_DELETE_UNAPPROVED_REPORTS_ON_APPLICATION_START
    boolean DEFAULT_DELETE_OLD_UNSENT_REPORTS_ON_APPLICATION_START -> DEFAULT_DELETE_OLD_UNSENT_REPORTS_ON_APPLICATION_START
    int DEFAULT_DROPBOX_COLLECTION_MINUTES -> DEFAULT_DROPBOX_COLLECTION_MINUTES
    boolean DEFAULT_INCLUDE_DROPBOX_SYSTEM_TAGS -> DEFAULT_INCLUDE_DROPBOX_SYSTEM_TAGS
    int DEFAULT_SHARED_PREFERENCES_MODE -> DEFAULT_SHARED_PREFERENCES_MODE
    int DEFAULT_NOTIFICATION_ICON -> DEFAULT_NOTIFICATION_ICON
    int DEFAULT_DIALOG_ICON -> DEFAULT_DIALOG_ICON
    int DEFAULT_DIALOG_POSITIVE_BUTTON_TEXT -> DEFAULT_DIALOG_POSITIVE_BUTTON_TEXT
    int DEFAULT_DIALOG_NEGATIVE_BUTTON_TEXT -> DEFAULT_DIALOG_NEGATIVE_BUTTON_TEXT
    int DEFAULT_RES_VALUE -> DEFAULT_RES_VALUE
    java.lang.String DEFAULT_STRING_VALUE -> DEFAULT_STRING_VALUE
    int DEFAULT_LOGCAT_LINES -> DEFAULT_LOGCAT_LINES
    int DEFAULT_BUFFER_SIZE_IN_BYTES -> DEFAULT_BUFFER_SIZE_IN_BYTES
    boolean DEFAULT_LOGCAT_FILTER_BY_PID -> DEFAULT_LOGCAT_FILTER_BY_PID
    boolean DEFAULT_SEND_REPORTS_IN_DEV_MODE -> DEFAULT_SEND_REPORTS_IN_DEV_MODE
    boolean DEFAULT_SEND_REPORTS_AT_SHUTDOWN -> DEFAULT_SEND_REPORTS_AT_SHUTDOWN
    java.lang.String DEFAULT_APPLICATION_LOGFILE -> DEFAULT_APPLICATION_LOGFILE
    int DEFAULT_APPLICATION_LOGFILE_LINES -> DEFAULT_APPLICATION_LOGFILE_LINES
    boolean DEFAULT_DISABLE_SSL_CERT_VALIDATION -> DEFAULT_DISABLE_SSL_CERT_VALIDATION
    java.lang.String DEFAULT_HTTP_SOCKET_FACTORY_FACTORY_CLASS -> DEFAULT_HTTP_SOCKET_FACTORY_FACTORY_CLASS
    org.acra.ReportField[] DEFAULT_MAIL_REPORT_FIELDS -> DEFAULT_MAIL_REPORT_FIELDS
    org.acra.ReportField[] DEFAULT_REPORT_FIELDS -> DEFAULT_REPORT_FIELDS
    java.lang.String DATE_TIME_FORMAT_STRING -> DATE_TIME_FORMAT_STRING
org.acra.BaseCrashReportDialog -> org.acra.BaseCrashReportDialog:
    java.lang.String mReportFileName -> mReportFileName
    void onCreate(android.os.Bundle) -> onCreate
    void cancelReports() -> cancelReports
    void sendCrash(java.lang.String,java.lang.String) -> sendCrash
org.acra.CrashReportDialog -> org.acra.CrashReportDialog:
    java.lang.String STATE_EMAIL -> STATE_EMAIL
    java.lang.String STATE_COMMENT -> STATE_COMMENT
    android.widget.EditText userCommentView -> userCommentView
    android.widget.EditText userEmailView -> userEmailView
    android.app.AlertDialog mDialog -> mDialog
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View buildCustomView(android.os.Bundle) -> buildCustomView
    void onClick(android.content.DialogInterface,int) -> onClick
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
org.acra.CrashReportFileNameParser -> org.acra.CrashReportFileNameParser:
    boolean isSilent(java.lang.String) -> isSilent
    boolean isApproved(java.lang.String) -> isApproved
org.acra.CrashReportFinder -> org.acra.CrashReportFinder:
    android.content.Context context -> context
    java.lang.String[] getCrashReportFiles() -> getCrashReportFiles
org.acra.CrashReportFinder$1 -> org.acra.CrashReportFinder$1:
    org.acra.CrashReportFinder this$0 -> this$0
    boolean accept(java.io.File,java.lang.String) -> accept
org.acra.CrashReportPersister -> org.acra.CrashReportPersister:
    int NONE -> NONE
    int SLASH -> SLASH
    int UNICODE -> UNICODE
    int CONTINUE -> CONTINUE
    int KEY_DONE -> KEY_DONE
    int IGNORE -> IGNORE
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    android.content.Context context -> context
    org.acra.collector.CrashReportData load(java.lang.String) -> load
    void store(org.acra.collector.CrashReportData,java.lang.String) -> store
    boolean isEbcdic(java.io.BufferedInputStream) -> isEbcdic
    org.acra.collector.CrashReportData load(java.io.Reader) -> load
    void dumpString(java.lang.StringBuilder,java.lang.String,boolean) -> dumpString
org.acra.ErrorReporter -> org.acra.ErrorReporter:
    boolean enabled -> enabled
    android.app.Application mContext -> mContext
    android.content.SharedPreferences prefs -> prefs
    java.util.List mReportSenders -> mReportSenders
    org.acra.collector.CrashReportDataFactory crashReportDataFactory -> crashReportDataFactory
    org.acra.CrashReportFileNameParser fileNameParser -> fileNameParser
    java.lang.Thread$UncaughtExceptionHandler mDfltExceptionHandler -> mDfltExceptionHandler
    java.lang.ref.WeakReference lastActivityCreated -> lastActivityCreated
    boolean toastWaitEnded -> toastWaitEnded
    org.acra.ExceptionHandlerInitializer NULL_EXCEPTION_HANDLER_INITIALIZER -> NULL_EXCEPTION_HANDLER_INITIALIZER
    org.acra.ExceptionHandlerInitializer exceptionHandlerInitializer -> exceptionHandlerInitializer
    int mNotificationCounter -> mNotificationCounter
    org.acra.ErrorReporter getInstance() -> getInstance
    void addCustomData(java.lang.String,java.lang.String) -> addCustomData
    java.lang.String putCustomData(java.lang.String,java.lang.String) -> putCustomData
    void setExceptionHandlerInitializer(org.acra.ExceptionHandlerInitializer) -> setExceptionHandlerInitializer
    java.lang.String removeCustomData(java.lang.String) -> removeCustomData
    void clearCustomData() -> clearCustomData
    java.lang.String getCustomData(java.lang.String) -> getCustomData
    void addReportSender(org.acra.sender.ReportSender) -> addReportSender
    void removeReportSender(org.acra.sender.ReportSender) -> removeReportSender
    void removeReportSenders(java.lang.Class) -> removeReportSenders
    void removeAllReportSenders() -> removeAllReportSenders
    void setReportSender(org.acra.sender.ReportSender) -> setReportSender
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void endApplication(java.lang.Thread,java.lang.Throwable) -> endApplication
    void handleSilentException(java.lang.Throwable) -> handleSilentException
    void setEnabled(boolean) -> setEnabled
    org.acra.SendWorker startSendingReports(boolean,boolean) -> startSendingReports
    void deletePendingReports() -> deletePendingReports
    void checkReportsOnApplicationStart() -> checkReportsOnApplicationStart
    void deletePendingNonApprovedReports(boolean) -> deletePendingNonApprovedReports
    void handleException(java.lang.Throwable,boolean) -> handleException
    void handleException(java.lang.Throwable) -> handleException
    org.acra.ErrorReporter$ReportBuilder reportBuilder() -> reportBuilder
    void report(org.acra.ErrorReporter$ReportBuilder) -> report
    android.content.Intent createCrashReportDialogIntent(java.lang.String,org.acra.ErrorReporter$ReportBuilder) -> createCrashReportDialogIntent
    void createNotification(java.lang.String,org.acra.ErrorReporter$ReportBuilder) -> createNotification
    java.lang.String getReportFileName(org.acra.collector.CrashReportData) -> getReportFileName
    void saveCrashReportFile(java.lang.String,org.acra.collector.CrashReportData) -> saveCrashReportFile
    void deletePendingReports(boolean,boolean,int) -> deletePendingReports
    boolean containsOnlySilentOrApprovedReports(java.lang.String[]) -> containsOnlySilentOrApprovedReports
    void setDefaultReportSenders() -> setDefaultReportSenders
    java.lang.ref.WeakReference access$002(org.acra.ErrorReporter,java.lang.ref.WeakReference) -> access$002
    android.app.Application access$400(org.acra.ErrorReporter) -> access$400
    boolean access$1102(org.acra.ErrorReporter,boolean) -> access$1102
    boolean access$1100(org.acra.ErrorReporter) -> access$1100
    android.content.Intent access$1200(org.acra.ErrorReporter,java.lang.String,org.acra.ErrorReporter$ReportBuilder) -> access$1200
    void access$1300(org.acra.ErrorReporter,java.lang.Thread,java.lang.Throwable) -> access$1300
    void access$1400(org.acra.ErrorReporter,org.acra.ErrorReporter$ReportBuilder) -> access$1400
org.acra.ErrorReporter$1 -> org.acra.ErrorReporter$1:
    void initializeExceptionHandler(org.acra.ErrorReporter) -> initializeExceptionHandler
org.acra.ErrorReporter$2 -> org.acra.ErrorReporter$2:
    org.acra.ErrorReporter this$0 -> this$0
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
org.acra.ErrorReporter$3 -> org.acra.ErrorReporter$3:
    org.acra.ErrorReporter$TimeHelper val$sentToastTimeMillis -> val$sentToastTimeMillis
    org.acra.ErrorReporter this$0 -> this$0
    void run() -> run
org.acra.ErrorReporter$4 -> org.acra.ErrorReporter$4:
    org.acra.ErrorReporter$TimeHelper val$sentToastTimeMillis -> val$sentToastTimeMillis
    org.acra.ErrorReporter this$0 -> this$0
    void run() -> run
org.acra.ErrorReporter$5 -> org.acra.ErrorReporter$5:
    org.acra.SendWorker val$worker -> val$worker
    boolean val$showDirectDialog -> val$showDirectDialog
    java.lang.String val$reportFileName -> val$reportFileName
    org.acra.ErrorReporter$ReportBuilder val$reportBuilder -> val$reportBuilder
    org.acra.ErrorReporter this$0 -> this$0
    void run() -> run
org.acra.ErrorReporter$ReportBuilder -> org.acra.ErrorReporter$ReportBuilder:
    java.lang.String mMessage -> mMessage
    java.lang.Thread mUncaughtExceptionThread -> mUncaughtExceptionThread
    java.lang.Throwable mException -> mException
    java.util.Map mCustomData -> mCustomData
    boolean mForceSilent -> mForceSilent
    boolean mEndsApplication -> mEndsApplication
    org.acra.ErrorReporter this$0 -> this$0
    org.acra.ErrorReporter$ReportBuilder message(java.lang.String) -> message
    org.acra.ErrorReporter$ReportBuilder uncaughtExceptionThread(java.lang.Thread) -> uncaughtExceptionThread
    org.acra.ErrorReporter$ReportBuilder exception(java.lang.Throwable) -> exception
    void initCustomData() -> initCustomData
    org.acra.ErrorReporter$ReportBuilder customData(java.util.Map) -> customData
    org.acra.ErrorReporter$ReportBuilder customData(java.lang.String,java.lang.String) -> customData
    org.acra.ErrorReporter$ReportBuilder forceSilent() -> forceSilent
    org.acra.ErrorReporter$ReportBuilder endsApplication() -> endsApplication
    void send() -> send
    org.acra.ErrorReporter$ReportBuilder access$100(org.acra.ErrorReporter$ReportBuilder,java.lang.Thread) -> access$100
    boolean access$200(org.acra.ErrorReporter$ReportBuilder) -> access$200
    java.lang.String access$500(org.acra.ErrorReporter$ReportBuilder) -> access$500
    java.lang.Throwable access$600(org.acra.ErrorReporter$ReportBuilder) -> access$600
    java.util.Map access$700(org.acra.ErrorReporter$ReportBuilder) -> access$700
    java.lang.Thread access$800(org.acra.ErrorReporter$ReportBuilder) -> access$800
    boolean access$900(org.acra.ErrorReporter$ReportBuilder) -> access$900
org.acra.ErrorReporter$TimeHelper -> org.acra.ErrorReporter$TimeHelper:
    java.lang.Long initialTimeMillis -> initialTimeMillis
    void setInitialTimeMillis(long) -> setInitialTimeMillis
    long getElapsedTime() -> getElapsedTime
    java.lang.Long access$1000(org.acra.ErrorReporter$TimeHelper) -> access$1000
org.acra.ExceptionHandlerInitializer -> org.acra.ExceptionHandlerInitializer:
    void initializeExceptionHandler(org.acra.ErrorReporter) -> initializeExceptionHandler
org.acra.ReportField -> org.acra.ReportField:
    org.acra.ReportField REPORT_ID -> REPORT_ID
    org.acra.ReportField APP_VERSION_CODE -> APP_VERSION_CODE
    org.acra.ReportField APP_VERSION_NAME -> APP_VERSION_NAME
    org.acra.ReportField PACKAGE_NAME -> PACKAGE_NAME
    org.acra.ReportField FILE_PATH -> FILE_PATH
    org.acra.ReportField PHONE_MODEL -> PHONE_MODEL
    org.acra.ReportField ANDROID_VERSION -> ANDROID_VERSION
    org.acra.ReportField BUILD -> BUILD
    org.acra.ReportField BRAND -> BRAND
    org.acra.ReportField PRODUCT -> PRODUCT
    org.acra.ReportField TOTAL_MEM_SIZE -> TOTAL_MEM_SIZE
    org.acra.ReportField AVAILABLE_MEM_SIZE -> AVAILABLE_MEM_SIZE
    org.acra.ReportField BUILD_CONFIG -> BUILD_CONFIG
    org.acra.ReportField CUSTOM_DATA -> CUSTOM_DATA
    org.acra.ReportField STACK_TRACE -> STACK_TRACE
    org.acra.ReportField STACK_TRACE_HASH -> STACK_TRACE_HASH
    org.acra.ReportField INITIAL_CONFIGURATION -> INITIAL_CONFIGURATION
    org.acra.ReportField CRASH_CONFIGURATION -> CRASH_CONFIGURATION
    org.acra.ReportField DISPLAY -> DISPLAY
    org.acra.ReportField USER_COMMENT -> USER_COMMENT
    org.acra.ReportField USER_APP_START_DATE -> USER_APP_START_DATE
    org.acra.ReportField USER_CRASH_DATE -> USER_CRASH_DATE
    org.acra.ReportField DUMPSYS_MEMINFO -> DUMPSYS_MEMINFO
    org.acra.ReportField DROPBOX -> DROPBOX
    org.acra.ReportField LOGCAT -> LOGCAT
    org.acra.ReportField EVENTSLOG -> EVENTSLOG
    org.acra.ReportField RADIOLOG -> RADIOLOG
    org.acra.ReportField IS_SILENT -> IS_SILENT
    org.acra.ReportField DEVICE_ID -> DEVICE_ID
    org.acra.ReportField INSTALLATION_ID -> INSTALLATION_ID
    org.acra.ReportField USER_EMAIL -> USER_EMAIL
    org.acra.ReportField DEVICE_FEATURES -> DEVICE_FEATURES
    org.acra.ReportField ENVIRONMENT -> ENVIRONMENT
    org.acra.ReportField SETTINGS_SYSTEM -> SETTINGS_SYSTEM
    org.acra.ReportField SETTINGS_SECURE -> SETTINGS_SECURE
    org.acra.ReportField SETTINGS_GLOBAL -> SETTINGS_GLOBAL
    org.acra.ReportField SHARED_PREFERENCES -> SHARED_PREFERENCES
    org.acra.ReportField APPLICATION_LOG -> APPLICATION_LOG
    org.acra.ReportField MEDIA_CODEC_LIST -> MEDIA_CODEC_LIST
    org.acra.ReportField THREAD_DETAILS -> THREAD_DETAILS
    org.acra.ReportField USER_IP -> USER_IP
    org.acra.ReportField[] $VALUES -> $VALUES
    org.acra.ReportField[] values() -> values
    org.acra.ReportField valueOf(java.lang.String) -> valueOf
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$1 -> org.acra.ReportField$1:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$10 -> org.acra.ReportField$10:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$11 -> org.acra.ReportField$11:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$12 -> org.acra.ReportField$12:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$2 -> org.acra.ReportField$2:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$3 -> org.acra.ReportField$3:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$4 -> org.acra.ReportField$4:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$5 -> org.acra.ReportField$5:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$6 -> org.acra.ReportField$6:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$7 -> org.acra.ReportField$7:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$8 -> org.acra.ReportField$8:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$9 -> org.acra.ReportField$9:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportingInteractionMode -> org.acra.ReportingInteractionMode:
    org.acra.ReportingInteractionMode SILENT -> SILENT
    org.acra.ReportingInteractionMode NOTIFICATION -> NOTIFICATION
    org.acra.ReportingInteractionMode TOAST -> TOAST
    org.acra.ReportingInteractionMode DIALOG -> DIALOG
    org.acra.ReportingInteractionMode[] $VALUES -> $VALUES
    org.acra.ReportingInteractionMode[] values() -> values
    org.acra.ReportingInteractionMode valueOf(java.lang.String) -> valueOf
org.acra.SendWorker -> org.acra.SendWorker:
    android.content.Context context -> context
    boolean sendOnlySilentReports -> sendOnlySilentReports
    boolean approvePendingReports -> approvePendingReports
    org.acra.CrashReportFileNameParser fileNameParser -> fileNameParser
    java.util.List reportSenders -> reportSenders
    void run() -> run
    void approvePendingReports() -> approvePendingReports
    void checkAndSendReports(android.content.Context,boolean) -> checkAndSendReports
    void sendCrashReport(org.acra.collector.CrashReportData) -> sendCrashReport
    void deleteFile(android.content.Context,java.lang.String) -> deleteFile
org.acra.annotation.ReportsCrashes -> org.acra.annotation.ReportsCrashes:
    java.lang.String formUri() -> formUri
    org.acra.ReportingInteractionMode mode() -> mode
    int resDialogPositiveButtonText() -> resDialogPositiveButtonText
    int resDialogNegativeButtonText() -> resDialogNegativeButtonText
    int resDialogCommentPrompt() -> resDialogCommentPrompt
    int resDialogEmailPrompt() -> resDialogEmailPrompt
    int resDialogIcon() -> resDialogIcon
    int resDialogOkToast() -> resDialogOkToast
    int resDialogText() -> resDialogText
    int resDialogTitle() -> resDialogTitle
    int resNotifIcon() -> resNotifIcon
    int resNotifText() -> resNotifText
    int resNotifTickerText() -> resNotifTickerText
    int resNotifTitle() -> resNotifTitle
    int resToastText() -> resToastText
    java.lang.String sharedPreferencesName() -> sharedPreferencesName
    int sharedPreferencesMode() -> sharedPreferencesMode
    boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    java.lang.String[] additionalDropBoxTags() -> additionalDropBoxTags
    int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    java.lang.String[] logcatArguments() -> logcatArguments
    java.lang.String formUriBasicAuthLogin() -> formUriBasicAuthLogin
    java.lang.String formUriBasicAuthPassword() -> formUriBasicAuthPassword
    org.acra.ReportField[] customReportContent() -> customReportContent
    java.lang.String mailTo() -> mailTo
    boolean deleteUnapprovedReportsOnApplicationStart() -> deleteUnapprovedReportsOnApplicationStart
    boolean deleteOldUnsentReportsOnApplicationStart() -> deleteOldUnsentReportsOnApplicationStart
    int connectionTimeout() -> connectionTimeout
    int socketTimeout() -> socketTimeout
    int maxNumberOfRequestRetries() -> maxNumberOfRequestRetries
    boolean forceCloseDialogAfterToast() -> forceCloseDialogAfterToast
    java.lang.String[] additionalSharedPreferences() -> additionalSharedPreferences
    boolean logcatFilterByPid() -> logcatFilterByPid
    boolean sendReportsInDevMode() -> sendReportsInDevMode
    boolean sendReportsAtShutdown() -> sendReportsAtShutdown
    java.lang.String[] excludeMatchingSharedPreferencesKeys() -> excludeMatchingSharedPreferencesKeys
    java.lang.String[] excludeMatchingSettingsKeys() -> excludeMatchingSettingsKeys
    java.lang.Class buildConfigClass() -> buildConfigClass
    java.lang.String applicationLogFile() -> applicationLogFile
    int applicationLogFileLines() -> applicationLogFileLines
    boolean disableSSLCertValidation() -> disableSSLCertValidation
    java.lang.String httpsSocketFactoryFactoryClass() -> httpsSocketFactoryFactoryClass
    java.lang.Class reportDialogClass() -> reportDialogClass
    org.acra.sender.HttpSender$Method httpMethod() -> httpMethod
    org.acra.sender.HttpSender$Type reportType() -> reportType
org.acra.collector.CollectorUtil -> org.acra.collector.CollectorUtil:
    void safeClose(java.io.Reader) -> safeClose
org.acra.collector.Compatibility -> org.acra.collector.Compatibility:
    int getAPILevel() -> getAPILevel
    java.lang.String getDropBoxServiceName() -> getDropBoxServiceName
org.acra.collector.ConfigurationCollector -> org.acra.collector.ConfigurationCollector:
    java.lang.String SUFFIX_MASK -> SUFFIX_MASK
    java.lang.String FIELD_SCREENLAYOUT -> FIELD_SCREENLAYOUT
    java.lang.String FIELD_UIMODE -> FIELD_UIMODE
    java.lang.String FIELD_MNC -> FIELD_MNC
    java.lang.String FIELD_MCC -> FIELD_MCC
    java.lang.String PREFIX_UI_MODE -> PREFIX_UI_MODE
    java.lang.String PREFIX_TOUCHSCREEN -> PREFIX_TOUCHSCREEN
    java.lang.String PREFIX_SCREENLAYOUT -> PREFIX_SCREENLAYOUT
    java.lang.String PREFIX_ORIENTATION -> PREFIX_ORIENTATION
    java.lang.String PREFIX_NAVIGATIONHIDDEN -> PREFIX_NAVIGATIONHIDDEN
    java.lang.String PREFIX_NAVIGATION -> PREFIX_NAVIGATION
    java.lang.String PREFIX_KEYBOARDHIDDEN -> PREFIX_KEYBOARDHIDDEN
    java.lang.String PREFIX_KEYBOARD -> PREFIX_KEYBOARD
    java.lang.String PREFIX_HARDKEYBOARDHIDDEN -> PREFIX_HARDKEYBOARDHIDDEN
    java.util.HashMap mValueArrays -> mValueArrays
    java.lang.String toString(android.content.res.Configuration) -> toString
    java.lang.String getFieldValueName(android.content.res.Configuration,java.lang.reflect.Field) -> getFieldValueName
    java.lang.String activeFlags(android.util.SparseArray,int) -> activeFlags
    java.lang.String collectConfiguration(android.content.Context) -> collectConfiguration
org.acra.collector.CrashReportData -> org.acra.collector.CrashReportData:
    long serialVersionUID -> serialVersionUID
    java.lang.String getProperty(org.acra.ReportField) -> getProperty
    org.json.JSONObject toJSON() -> toJSON
org.acra.collector.CrashReportDataFactory -> org.acra.collector.CrashReportDataFactory:
    android.content.Context context -> context
    android.content.SharedPreferences prefs -> prefs
    java.util.Map customParameters -> customParameters
    android.text.format.Time appStartDate -> appStartDate
    java.lang.String initialConfiguration -> initialConfiguration
    java.lang.String putCustomData(java.lang.String,java.lang.String) -> putCustomData
    java.lang.String removeCustomData(java.lang.String) -> removeCustomData
    void clearCustomData() -> clearCustomData
    java.lang.String getCustomData(java.lang.String) -> getCustomData
    org.acra.collector.CrashReportData createCrashData(java.lang.String,java.lang.Throwable,java.util.Map,boolean,java.lang.Thread) -> createCrashData
    java.lang.String createCustomInfoString(java.util.Map) -> createCustomInfoString
    java.lang.String getStackTrace(java.lang.String,java.lang.Throwable) -> getStackTrace
    java.lang.String getStackTraceHash(java.lang.Throwable) -> getStackTraceHash
    java.lang.Class getBuildConfigClass() -> getBuildConfigClass
org.acra.collector.DeviceFeaturesCollector -> org.acra.collector.DeviceFeaturesCollector:
    java.lang.String getFeatures(android.content.Context) -> getFeatures
org.acra.collector.DisplayManagerCollector -> org.acra.collector.DisplayManagerCollector:
    android.util.SparseArray mFlagsNames -> mFlagsNames
    android.util.SparseArray mDensities -> mDensities
    java.lang.String collectDisplays(android.content.Context) -> collectDisplays
    java.lang.Object collectDisplayData(android.view.Display) -> collectDisplayData
    java.lang.Object collectIsValid(android.view.Display) -> collectIsValid
    java.lang.Object collectRotation(android.view.Display) -> collectRotation
    java.lang.Object collectRectSize(android.view.Display) -> collectRectSize
    java.lang.Object collectSize(android.view.Display,java.lang.String) -> collectSize
    java.lang.String collectCurrentSizeRange(android.view.Display) -> collectCurrentSizeRange
    java.lang.String collectFlags(android.view.Display) -> collectFlags
    java.lang.String collectName(android.view.Display) -> collectName
    java.lang.Object collectMetrics(android.view.Display,java.lang.String) -> collectMetrics
    java.lang.String activeFlags(android.util.SparseArray,int) -> activeFlags
org.acra.collector.DropBoxCollector -> org.acra.collector.DropBoxCollector:
    java.lang.String[] SYSTEM_TAGS -> SYSTEM_TAGS
    java.lang.String NO_RESULT -> NO_RESULT
    java.lang.String read(android.content.Context,java.lang.String[]) -> read
org.acra.collector.DumpSysCollector -> org.acra.collector.DumpSysCollector:
    java.lang.String collectMemInfo() -> collectMemInfo
org.acra.collector.LogCatCollector -> org.acra.collector.LogCatCollector:
    int DEFAULT_TAIL_COUNT -> DEFAULT_TAIL_COUNT
    java.lang.String collectLogCat(java.lang.String) -> collectLogCat
org.acra.collector.LogCatCollector$1 -> org.acra.collector.LogCatCollector$1:
    java.lang.Process val$process -> val$process
    void run() -> run
org.acra.collector.LogFileCollector -> org.acra.collector.LogFileCollector:
    java.lang.String collectLogFile(android.content.Context,java.lang.String,int) -> collectLogFile
org.acra.collector.MediaCodecListCollector -> org.acra.collector.MediaCodecListCollector:
    java.lang.String COLOR_FORMAT_PREFIX -> COLOR_FORMAT_PREFIX
    java.lang.String[] MPEG4_TYPES -> MPEG4_TYPES
    java.lang.String[] AVC_TYPES -> AVC_TYPES
    java.lang.String[] H263_TYPES -> H263_TYPES
    java.lang.String[] AAC_TYPES -> AAC_TYPES
    java.lang.Class mediaCodecListClass -> mediaCodecListClass
    java.lang.reflect.Method getCodecInfoAtMethod -> getCodecInfoAtMethod
    java.lang.Class mediaCodecInfoClass -> mediaCodecInfoClass
    java.lang.reflect.Method getNameMethod -> getNameMethod
    java.lang.reflect.Method isEncoderMethod -> isEncoderMethod
    java.lang.reflect.Method getSupportedTypesMethod -> getSupportedTypesMethod
    java.lang.reflect.Method getCapabilitiesForTypeMethod -> getCapabilitiesForTypeMethod
    java.lang.Class codecCapabilitiesClass -> codecCapabilitiesClass
    java.lang.reflect.Field colorFormatsField -> colorFormatsField
    java.lang.reflect.Field profileLevelsField -> profileLevelsField
    java.lang.reflect.Field profileField -> profileField
    java.lang.reflect.Field levelField -> levelField
    android.util.SparseArray mColorFormatValues -> mColorFormatValues
    android.util.SparseArray mAVCLevelValues -> mAVCLevelValues
    android.util.SparseArray mAVCProfileValues -> mAVCProfileValues
    android.util.SparseArray mH263LevelValues -> mH263LevelValues
    android.util.SparseArray mH263ProfileValues -> mH263ProfileValues
    android.util.SparseArray mMPEG4LevelValues -> mMPEG4LevelValues
    android.util.SparseArray mMPEG4ProfileValues -> mMPEG4ProfileValues
    android.util.SparseArray mAACProfileValues -> mAACProfileValues
    java.lang.String collecMediaCodecList() -> collecMediaCodecList
    java.lang.String collectCapabilitiesForType(java.lang.Object,java.lang.String) -> collectCapabilitiesForType
    org.acra.collector.MediaCodecListCollector$CodecType identifyCodecType(java.lang.Object) -> identifyCodecType
org.acra.collector.MediaCodecListCollector$1 -> org.acra.collector.MediaCodecListCollector$1:
    int[] $SwitchMap$org$acra$collector$MediaCodecListCollector$CodecType -> $SwitchMap$org$acra$collector$MediaCodecListCollector$CodecType
org.acra.collector.MediaCodecListCollector$CodecType -> org.acra.collector.MediaCodecListCollector$CodecType:
    org.acra.collector.MediaCodecListCollector$CodecType AVC -> AVC
    org.acra.collector.MediaCodecListCollector$CodecType H263 -> H263
    org.acra.collector.MediaCodecListCollector$CodecType MPEG4 -> MPEG4
    org.acra.collector.MediaCodecListCollector$CodecType AAC -> AAC
    org.acra.collector.MediaCodecListCollector$CodecType[] $VALUES -> $VALUES
    org.acra.collector.MediaCodecListCollector$CodecType[] values() -> values
    org.acra.collector.MediaCodecListCollector$CodecType valueOf(java.lang.String) -> valueOf
org.acra.collector.ReflectionCollector -> org.acra.collector.ReflectionCollector:
    java.lang.String collectConstants(java.lang.Class,java.lang.String) -> collectConstants
    java.lang.String collectStaticGettersResults(java.lang.Class) -> collectStaticGettersResults
    java.lang.String collectConstants(java.lang.Class) -> collectConstants
org.acra.collector.SettingsCollector -> org.acra.collector.SettingsCollector:
    java.lang.String collectSystemSettings(android.content.Context) -> collectSystemSettings
    java.lang.String collectSecureSettings(android.content.Context) -> collectSecureSettings
    java.lang.String collectGlobalSettings(android.content.Context) -> collectGlobalSettings
    boolean isAuthorized(java.lang.reflect.Field) -> isAuthorized
org.acra.collector.SharedPreferencesCollector -> org.acra.collector.SharedPreferencesCollector:
    java.lang.String collect(android.content.Context) -> collect
    boolean filteredKey(java.lang.String) -> filteredKey
org.acra.collector.ThreadCollector -> org.acra.collector.ThreadCollector:
    java.lang.String collect(java.lang.Thread) -> collect
org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksAdapter -> org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksAdapter:
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat -> org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat:
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksWrapper -> org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksWrapper:
    org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat mCallback -> mCallback
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.acra.jraf.android.util.activitylifecyclecallbackscompat.ApplicationHelper -> org.acra.jraf.android.util.activitylifecyclecallbackscompat.ApplicationHelper:
    boolean PRE_ICS -> PRE_ICS
    void registerActivityLifecycleCallbacks(android.app.Application,org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> registerActivityLifecycleCallbacks
    void preIcsRegisterActivityLifecycleCallbacks(org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> preIcsRegisterActivityLifecycleCallbacks
    void postIcsRegisterActivityLifecycleCallbacks(android.app.Application,org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> postIcsRegisterActivityLifecycleCallbacks
    void unregisterActivityLifecycleCallbacks(android.app.Application,org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> unregisterActivityLifecycleCallbacks
    void preIcsUnregisterActivityLifecycleCallbacks(org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> preIcsUnregisterActivityLifecycleCallbacks
    void postIcsUnregisterActivityLifecycleCallbacks(android.app.Application,org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> postIcsUnregisterActivityLifecycleCallbacks
org.acra.jraf.android.util.activitylifecyclecallbackscompat.MainLifecycleDispatcher -> org.acra.jraf.android.util.activitylifecyclecallbackscompat.MainLifecycleDispatcher:
    org.acra.jraf.android.util.activitylifecyclecallbackscompat.MainLifecycleDispatcher INSTANCE -> INSTANCE
    java.util.ArrayList mActivityLifecycleCallbacks -> mActivityLifecycleCallbacks
    org.acra.jraf.android.util.activitylifecyclecallbackscompat.MainLifecycleDispatcher get() -> get
    void registerActivityLifecycleCallbacks(org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> registerActivityLifecycleCallbacks
    void unregisterActivityLifecycleCallbacks(org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> unregisterActivityLifecycleCallbacks
    java.lang.Object[] collectActivityLifecycleCallbacks() -> collectActivityLifecycleCallbacks
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
org.acra.log.ACRALog -> org.acra.log.ACRALog:
    int v(java.lang.String,java.lang.String) -> v
    int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String,java.lang.String) -> d
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String,java.lang.String) -> i
    int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String,java.lang.String) -> w
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
org.acra.log.AndroidLogDelegate -> org.acra.log.AndroidLogDelegate:
    int v(java.lang.String,java.lang.String) -> v
    int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String,java.lang.String) -> d
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String,java.lang.String) -> i
    int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String,java.lang.String) -> w
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
org.acra.log.HollowLog -> org.acra.log.HollowLog:
    int v(java.lang.String,java.lang.String) -> v
    int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String,java.lang.String) -> d
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String,java.lang.String) -> i
    int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String,java.lang.String) -> w
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
org.acra.sender.EmailIntentSender -> org.acra.sender.EmailIntentSender:
    android.content.Context mContext -> mContext
    void send(android.content.Context,org.acra.collector.CrashReportData) -> send
    java.lang.String buildBody(org.acra.collector.CrashReportData) -> buildBody
org.acra.sender.HttpSender -> org.acra.sender.HttpSender:
    android.net.Uri mFormUri -> mFormUri
    java.util.Map mMapping -> mMapping
    org.acra.sender.HttpSender$Method mMethod -> mMethod
    org.acra.sender.HttpSender$Type mType -> mType
    java.lang.String mUsername -> mUsername
    java.lang.String mPassword -> mPassword
    void setBasicAuth(java.lang.String,java.lang.String) -> setBasicAuth
    void send(android.content.Context,org.acra.collector.CrashReportData) -> send
    java.util.Map remap(java.util.Map) -> remap
org.acra.sender.HttpSender$1 -> org.acra.sender.HttpSender$1:
    int[] $SwitchMap$org$acra$sender$HttpSender$Type -> $SwitchMap$org$acra$sender$HttpSender$Type
    int[] $SwitchMap$org$acra$sender$HttpSender$Method -> $SwitchMap$org$acra$sender$HttpSender$Method
org.acra.sender.HttpSender$Method -> org.acra.sender.HttpSender$Method:
    org.acra.sender.HttpSender$Method POST -> POST
    org.acra.sender.HttpSender$Method PUT -> PUT
    org.acra.sender.HttpSender$Method[] $VALUES -> $VALUES
    org.acra.sender.HttpSender$Method[] values() -> values
    org.acra.sender.HttpSender$Method valueOf(java.lang.String) -> valueOf
org.acra.sender.HttpSender$Type -> org.acra.sender.HttpSender$Type:
    org.acra.sender.HttpSender$Type FORM -> FORM
    org.acra.sender.HttpSender$Type JSON -> JSON
    org.acra.sender.HttpSender$Type[] $VALUES -> $VALUES
    org.acra.sender.HttpSender$Type[] values() -> values
    org.acra.sender.HttpSender$Type valueOf(java.lang.String) -> valueOf
    java.lang.String getContentType() -> getContentType
org.acra.sender.HttpSender$Type$1 -> org.acra.sender.HttpSender$Type$1:
    java.lang.String getContentType() -> getContentType
org.acra.sender.HttpSender$Type$2 -> org.acra.sender.HttpSender$Type$2:
    java.lang.String getContentType() -> getContentType
org.acra.sender.ReportSender -> org.acra.sender.ReportSender:
    void send(android.content.Context,org.acra.collector.CrashReportData) -> send
org.acra.sender.ReportSenderException -> org.acra.sender.ReportSenderException:
org.acra.util.BoundedLinkedList -> org.acra.util.BoundedLinkedList:
    int maxSize -> maxSize
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.String toString() -> toString
org.acra.util.DefaultHttpsSocketFactoryFactory -> org.acra.util.DefaultHttpsSocketFactoryFactory:
    org.acra.util.HttpsSocketFactoryFactory INSTANCE -> INSTANCE
    org.apache.http.conn.scheme.SocketFactory create(android.content.Context) -> create
org.acra.util.FakeSocketFactory -> org.acra.util.FakeSocketFactory:
    javax.net.ssl.SSLContext sslcontext -> sslcontext
    javax.net.ssl.SSLContext createEasySSLContext() -> createEasySSLContext
    javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket() -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.acra.util.HttpRequest -> org.acra.util.HttpRequest:
    java.lang.String login -> login
    java.lang.String password -> password
    int connectionTimeOut -> connectionTimeOut
    int socketTimeOut -> socketTimeOut
    int maxNrRetries -> maxNrRetries
    java.util.Map headers -> headers
    void setLogin(java.lang.String) -> setLogin
    void setPassword(java.lang.String) -> setPassword
    void setConnectionTimeOut(int) -> setConnectionTimeOut
    void setSocketTimeOut(int) -> setSocketTimeOut
    void setHeaders(java.util.Map) -> setHeaders
    void setMaxNrRetries(int) -> setMaxNrRetries
    void send(android.content.Context,java.net.URL,org.acra.sender.HttpSender$Method,java.lang.String,org.acra.sender.HttpSender$Type) -> send
    org.apache.http.client.HttpClient getHttpClient(android.content.Context) -> getHttpClient
    org.apache.http.auth.UsernamePasswordCredentials getCredentials() -> getCredentials
    org.apache.http.client.methods.HttpEntityEnclosingRequestBase getHttpRequest(java.net.URL,org.acra.sender.HttpSender$Method,java.lang.String,org.acra.sender.HttpSender$Type) -> getHttpRequest
    java.lang.String getParamsAsFormString(java.util.Map) -> getParamsAsFormString
org.acra.util.HttpRequest$1 -> org.acra.util.HttpRequest$1:
    int[] $SwitchMap$org$acra$sender$HttpSender$Method -> $SwitchMap$org$acra$sender$HttpSender$Method
org.acra.util.HttpRequest$SocketTimeOutRetryHandler -> org.acra.util.HttpRequest$SocketTimeOutRetryHandler:
    org.apache.http.params.HttpParams httpParams -> httpParams
    int maxNrRetries -> maxNrRetries
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
org.acra.util.HttpsSocketFactoryFactory -> org.acra.util.HttpsSocketFactoryFactory:
    org.apache.http.conn.scheme.SocketFactory create(android.content.Context) -> create
org.acra.util.Installation -> org.acra.util.Installation:
    java.lang.String sID -> sID
    java.lang.String INSTALLATION -> INSTALLATION
    java.lang.String id(android.content.Context) -> id
    java.lang.String readInstallationFile(java.io.File) -> readInstallationFile
    void writeInstallationFile(java.io.File) -> writeInstallationFile
org.acra.util.JSONReportBuilder -> org.acra.util.JSONReportBuilder:
    org.json.JSONObject buildJSONReport(org.acra.collector.CrashReportData) -> buildJSONReport
    void addJSONFromProperty(org.json.JSONObject,java.lang.String) -> addJSONFromProperty
    java.lang.Object guessType(java.lang.String) -> guessType
    void addJSONSubTree(org.json.JSONObject,java.lang.String[],java.lang.Object) -> addJSONSubTree
org.acra.util.JSONReportBuilder$JSONReportException -> org.acra.util.JSONReportBuilder$JSONReportException:
    long serialVersionUID -> serialVersionUID
org.acra.util.NaiveTrustManager -> org.acra.util.NaiveTrustManager:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
org.acra.util.PackageManagerWrapper -> org.acra.util.PackageManagerWrapper:
    android.content.Context context -> context
    boolean hasPermission(java.lang.String) -> hasPermission
    android.content.pm.PackageInfo getPackageInfo() -> getPackageInfo
org.acra.util.ReflectionException -> org.acra.util.ReflectionException:
org.acra.util.ReflectionHelper -> org.acra.util.ReflectionHelper:
    java.lang.Object create(java.lang.String) -> create
org.acra.util.ReportUtils -> org.acra.util.ReportUtils:
    long getAvailableInternalMemorySize() -> getAvailableInternalMemorySize
    long getTotalInternalMemorySize() -> getTotalInternalMemorySize
    java.lang.String getDeviceId(android.content.Context) -> getDeviceId
    java.lang.String getApplicationFilePath(android.content.Context) -> getApplicationFilePath
    java.lang.String sparseArrayToString(android.util.SparseArray) -> sparseArrayToString
    java.lang.String getLocalIpAddress() -> getLocalIpAddress
    java.lang.String getTimeString(android.text.format.Time) -> getTimeString
org.acra.util.TlsSniSocketFactory -> org.acra.util.TlsSniSocketFactory:
    java.lang.String TAG -> TAG
    int VERSION_CODES_JELLY_BEAN_MR1 -> VERSION_CODES_JELLY_BEAN_MR1
    int VERSION_CODES_LOLLIPOP -> VERSION_CODES_LOLLIPOP
    android.net.SSLCertificateSocketFactory sslSocketFactory -> sslSocketFactory
    javax.net.ssl.HostnameVerifier hostnameVerifier -> hostnameVerifier
    java.util.List ALLOWED_CIPHERS -> ALLOWED_CIPHERS
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket() -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    void establishAndVerify(javax.net.ssl.SSLSocket,java.lang.String) -> establishAndVerify
    void setTlsParameters(javax.net.ssl.SSLSocket) -> setTlsParameters
    void setSniHostname(javax.net.ssl.SSLSocket,java.lang.String) -> setSniHostname
org.acra.util.ToastSender -> org.acra.util.ToastSender:
    void sendToast(android.content.Context,int,int) -> sendToast
se.emilsjolander.stickylistheaders.AdapterWrapper -> se.emilsjolander.stickylistheaders.a:
    se.emilsjolander.stickylistheaders.StickyListHeadersAdapter mDelegate -> a
    java.util.List mHeaderCache -> b
    android.content.Context mContext -> c
    android.graphics.drawable.Drawable mDivider -> d
    int mDividerHeight -> e
    se.emilsjolander.stickylistheaders.AdapterWrapper$OnHeaderClickListener mOnHeaderClickListener -> f
    android.database.DataSetObserver mDataSetObserver -> g
    void setDivider(android.graphics.drawable.Drawable,int) -> a
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
    void recycleHeaderIfExists(se.emilsjolander.stickylistheaders.WrapperView) -> a
    android.view.View configureHeader(se.emilsjolander.stickylistheaders.WrapperView,int) -> a
    android.view.View popHeader() -> a
    boolean previousPositionHasSameHeader(int) -> b
    se.emilsjolander.stickylistheaders.WrapperView getView(int,android.view.View,android.view.ViewGroup) -> b
    void setOnHeaderClickListener(se.emilsjolander.stickylistheaders.AdapterWrapper$OnHeaderClickListener) -> a
    boolean equals(java.lang.Object) -> equals
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    int hashCode() -> hashCode
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    java.lang.String toString() -> toString
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> a
    long getHeaderId(int) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.List access$1(se.emilsjolander.stickylistheaders.AdapterWrapper) -> a
    void access$2(se.emilsjolander.stickylistheaders.AdapterWrapper) -> b
    void access$3(se.emilsjolander.stickylistheaders.AdapterWrapper) -> c
    se.emilsjolander.stickylistheaders.AdapterWrapper$OnHeaderClickListener access$4(se.emilsjolander.stickylistheaders.AdapterWrapper) -> d
se.emilsjolander.stickylistheaders.AdapterWrapper$1 -> se.emilsjolander.stickylistheaders.b:
    se.emilsjolander.stickylistheaders.AdapterWrapper this$0 -> a
    void onInvalidated() -> onInvalidated
    void onChanged() -> onChanged
se.emilsjolander.stickylistheaders.AdapterWrapper$2 -> se.emilsjolander.stickylistheaders.c:
    se.emilsjolander.stickylistheaders.AdapterWrapper this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
se.emilsjolander.stickylistheaders.AdapterWrapper$OnHeaderClickListener -> se.emilsjolander.stickylistheaders.d:
    void onHeaderClick(android.view.View,int,long) -> a
se.emilsjolander.stickylistheaders.CheckableWrapperView -> se.emilsjolander.stickylistheaders.e:
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
se.emilsjolander.stickylistheaders.R -> se.emilsjolander.stickylistheaders.f:
se.emilsjolander.stickylistheaders.R$attr -> se.emilsjolander.stickylistheaders.g:
    int isDrawingListUnderStickyHeader -> isDrawingListUnderStickyHeader
    int hasStickyHeaders -> hasStickyHeaders
    int stickyListHeadersListViewStyle -> stickyListHeadersListViewStyle
se.emilsjolander.stickylistheaders.R$styleable -> se.emilsjolander.stickylistheaders.h:
    int StickyListHeadersListView_android_paddingBottom -> StickyListHeadersListView_android_paddingBottom
    int StickyListHeadersListView_android_fastScrollAlwaysVisible -> StickyListHeadersListView_android_fastScrollAlwaysVisible
    int StickyListHeadersListView_android_paddingRight -> StickyListHeadersListView_android_paddingRight
    int StickyListHeadersListView_android_fastScrollEnabled -> StickyListHeadersListView_android_fastScrollEnabled
    int StickyListHeadersListView_android_drawSelectorOnTop -> StickyListHeadersListView_android_drawSelectorOnTop
    int StickyListHeadersListView_android_listSelector -> StickyListHeadersListView_android_listSelector
    int StickyListHeadersListView_android_requiresFadingEdge -> StickyListHeadersListView_android_requiresFadingEdge
    int StickyListHeadersListView_android_padding -> StickyListHeadersListView_android_padding
    int StickyListHeadersListView_android_fadingEdgeLength -> StickyListHeadersListView_android_fadingEdgeLength
    int[] StickyListHeadersListView -> StickyListHeadersListView
    int StickyListHeadersListView_stickyListHeadersListViewStyle -> StickyListHeadersListView_stickyListHeadersListViewStyle
    int StickyListHeadersListView_android_choiceMode -> StickyListHeadersListView_android_choiceMode
    int StickyListHeadersListView_hasStickyHeaders -> StickyListHeadersListView_hasStickyHeaders
    int StickyListHeadersListView_android_scrollbars -> StickyListHeadersListView_android_scrollbars
    int StickyListHeadersListView_android_transcriptMode -> StickyListHeadersListView_android_transcriptMode
    int StickyListHeadersListView_android_cacheColorHint -> StickyListHeadersListView_android_cacheColorHint
    int StickyListHeadersListView_isDrawingListUnderStickyHeader -> StickyListHeadersListView_isDrawingListUnderStickyHeader
    int StickyListHeadersListView_android_stackFromBottom -> StickyListHeadersListView_android_stackFromBottom
    int StickyListHeadersListView_android_scrollingCache -> StickyListHeadersListView_android_scrollingCache
    int StickyListHeadersListView_android_paddingTop -> StickyListHeadersListView_android_paddingTop
    int StickyListHeadersListView_android_divider -> StickyListHeadersListView_android_divider
    int StickyListHeadersListView_android_scrollbarStyle -> StickyListHeadersListView_android_scrollbarStyle
    int StickyListHeadersListView_android_dividerHeight -> StickyListHeadersListView_android_dividerHeight
    int StickyListHeadersListView_android_paddingLeft -> StickyListHeadersListView_android_paddingLeft
    int StickyListHeadersListView_android_overScrollMode -> StickyListHeadersListView_android_overScrollMode
    int StickyListHeadersListView_android_clipToPadding -> StickyListHeadersListView_android_clipToPadding
se.emilsjolander.stickylistheaders.SectionIndexerAdapterWrapper -> se.emilsjolander.stickylistheaders.i:
    android.widget.SectionIndexer mSectionIndexerDelegate -> b
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.Object[] getSections() -> getSections
se.emilsjolander.stickylistheaders.StickyListHeadersAdapter -> se.emilsjolander.stickylistheaders.j:
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> a
    long getHeaderId(int) -> a
se.emilsjolander.stickylistheaders.StickyListHeadersListView -> se.emilsjolander.stickylistheaders.StickyListHeadersListView:
    se.emilsjolander.stickylistheaders.WrapperViewList mList -> a
    android.view.View mHeader -> b
    java.lang.Long mHeaderId -> c
    java.lang.Integer mHeaderPosition -> d
    java.lang.Integer mHeaderOffset -> e
    android.widget.AbsListView$OnScrollListener mOnScrollListenerDelegate -> f
    se.emilsjolander.stickylistheaders.AdapterWrapper mAdapter -> g
    boolean mAreHeadersSticky -> h
    boolean mClippingToPadding -> i
    boolean mIsDrawingListUnderStickyHeader -> j
    int mStickyHeaderTopOffset -> k
    int mPaddingLeft -> l
    int mPaddingTop -> m
    int mPaddingRight -> n
    int mPaddingBottom -> o
    float mDownY -> p
    boolean mHeaderOwnsTouch -> q
    float mTouchSlop -> r
    se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnHeaderClickListener mOnHeaderClickListener -> s
    se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnStickyHeaderOffsetChangedListener mOnStickyHeaderOffsetChangedListener -> t
    se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnStickyHeaderChangedListener mOnStickyHeaderChangedListener -> u
    se.emilsjolander.stickylistheaders.StickyListHeadersListView$AdapterWrapperDataSetObserver mDataSetObserver -> v
    android.graphics.drawable.Drawable mDivider -> w
    int mDividerHeight -> x
    void onMeasure(int,int) -> onMeasure
    void ensureHeaderHasCorrectLayoutParams(android.view.View) -> a
    void measureHeader(android.view.View) -> b
    void onLayout(boolean,int,int,int,int) -> onLayout
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void clearHeader() -> b
    void updateOrClearHeader(int) -> b
    void updateHeader(int) -> c
    void swapHeader(android.view.View) -> c
    void updateHeaderVisibilities() -> c
    void setHeaderOffet(int) -> setHeaderOffet
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean isStartOfSection(int) -> d
    int getHeaderOverlap(int) -> a
    int stickyHeaderTop() -> d
    void setAreHeadersSticky(boolean) -> setAreHeadersSticky
    boolean areHeadersSticky() -> a
    boolean getAreHeadersSticky() -> getAreHeadersSticky
    void setStickyHeaderTopOffset(int) -> setStickyHeaderTopOffset
    int getStickyHeaderTopOffset() -> getStickyHeaderTopOffset
    void setDrawingListUnderStickyHeader(boolean) -> setDrawingListUnderStickyHeader
    void setOnHeaderClickListener(se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnHeaderClickListener) -> setOnHeaderClickListener
    void setOnStickyHeaderOffsetChangedListener(se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnStickyHeaderOffsetChangedListener) -> setOnStickyHeaderOffsetChangedListener
    void setOnStickyHeaderChangedListener(se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnStickyHeaderChangedListener) -> setOnStickyHeaderChangedListener
    int getListChildCount() -> getListChildCount
    android.widget.ListView getWrappedList() -> getWrappedList
    boolean requireSdkVersion(int) -> e
    void setAdapter(se.emilsjolander.stickylistheaders.StickyListHeadersAdapter) -> setAdapter
    se.emilsjolander.stickylistheaders.StickyListHeadersAdapter getAdapter() -> getAdapter
    void setDivider(android.graphics.drawable.Drawable) -> setDivider
    void setDividerHeight(int) -> setDividerHeight
    android.graphics.drawable.Drawable getDivider() -> getDivider
    int getDividerHeight() -> getDividerHeight
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    int getHeaderViewsCount() -> getHeaderViewsCount
    int getFooterViewsCount() -> getFooterViewsCount
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isVerticalScrollBarEnabled() -> isVerticalScrollBarEnabled
    boolean isHorizontalScrollBarEnabled() -> isHorizontalScrollBarEnabled
    void setVerticalScrollBarEnabled(boolean) -> setVerticalScrollBarEnabled
    void setHorizontalScrollBarEnabled(boolean) -> setHorizontalScrollBarEnabled
    int getOverScrollMode() -> getOverScrollMode
    void setOverScrollMode(int) -> setOverScrollMode
    void setSelection(int) -> setSelection
    void setSelectionFromTop(int,int) -> a
    void setSelector(android.graphics.drawable.Drawable) -> setSelector
    void setSelector(int) -> setSelector
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setChoiceMode(int) -> setChoiceMode
    int getCheckedItemCount() -> getCheckedItemCount
    long[] getCheckedItemIds() -> getCheckedItemIds
    int getCheckedItemPosition() -> getCheckedItemPosition
    android.util.SparseBooleanArray getCheckedItemPositions() -> getCheckedItemPositions
    int getCount() -> getCount
    void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener) -> setOnCreateContextMenuListener
    boolean showContextMenu() -> showContextMenu
    void setClipToPadding(boolean) -> setClipToPadding
    void setPadding(int,int,int,int) -> setPadding
    int getPaddingLeft() -> getPaddingLeft
    int getPaddingTop() -> getPaddingTop
    int getPaddingRight() -> getPaddingRight
    int getPaddingBottom() -> getPaddingBottom
    void setFastScrollEnabled(boolean) -> setFastScrollEnabled
    void setFastScrollAlwaysVisible(boolean) -> setFastScrollAlwaysVisible
    void setScrollBarStyle(int) -> setScrollBarStyle
    int getScrollBarStyle() -> getScrollBarStyle
    void setMultiChoiceModeListener(android.widget.AbsListView$MultiChoiceModeListener) -> setMultiChoiceModeListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean canScrollVertically(int) -> canScrollVertically
    void setTranscriptMode(int) -> setTranscriptMode
    void setBlockLayoutChildren(boolean) -> setBlockLayoutChildren
    void setStackFromBottom(boolean) -> setStackFromBottom
    void access$0(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> a
    android.widget.AbsListView$OnScrollListener access$1(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> b
    se.emilsjolander.stickylistheaders.WrapperViewList access$2(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> c
    void access$3(se.emilsjolander.stickylistheaders.StickyListHeadersListView,int) -> a
    android.view.View access$4(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> d
    boolean access$5(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> e
    int access$6(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> f
    boolean access$7(se.emilsjolander.stickylistheaders.StickyListHeadersListView,android.graphics.Canvas,android.view.View,long) -> a
    se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnHeaderClickListener access$8(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> g
    java.lang.Integer access$9(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> h
    java.lang.Long access$10(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> i
se.emilsjolander.stickylistheaders.StickyListHeadersListView$1 -> se.emilsjolander.stickylistheaders.k:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onClick(android.view.View) -> onClick
se.emilsjolander.stickylistheaders.StickyListHeadersListView$2 -> se.emilsjolander.stickylistheaders.l:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onClick(android.view.View) -> onClick
se.emilsjolander.stickylistheaders.StickyListHeadersListView$3 -> se.emilsjolander.stickylistheaders.m:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    android.view.View$OnTouchListener val$l -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
se.emilsjolander.stickylistheaders.StickyListHeadersListView$AdapterWrapperDataSetObserver -> se.emilsjolander.stickylistheaders.n:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
se.emilsjolander.stickylistheaders.StickyListHeadersListView$AdapterWrapperHeaderClickHandler -> se.emilsjolander.stickylistheaders.o:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onHeaderClick(android.view.View,int,long) -> a
se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnHeaderClickListener -> se.emilsjolander.stickylistheaders.p:
    void onHeaderClick(se.emilsjolander.stickylistheaders.StickyListHeadersListView,android.view.View,int,long,boolean) -> a
se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnStickyHeaderChangedListener -> se.emilsjolander.stickylistheaders.q:
    void onStickyHeaderChanged(se.emilsjolander.stickylistheaders.StickyListHeadersListView,android.view.View,int,long) -> a
se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnStickyHeaderOffsetChangedListener -> se.emilsjolander.stickylistheaders.r:
    void onStickyHeaderOffsetChanged(se.emilsjolander.stickylistheaders.StickyListHeadersListView,android.view.View,int) -> a
se.emilsjolander.stickylistheaders.StickyListHeadersListView$WrapperListScrollListener -> se.emilsjolander.stickylistheaders.s:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
se.emilsjolander.stickylistheaders.StickyListHeadersListView$WrapperViewListLifeCycleListener -> se.emilsjolander.stickylistheaders.t:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onDispatchDrawOccurred(android.graphics.Canvas) -> a
se.emilsjolander.stickylistheaders.WrapperView -> se.emilsjolander.stickylistheaders.u:
    android.view.View mItem -> a
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerHeight -> c
    android.view.View mHeader -> d
    int mItemTop -> e
    boolean hasHeader() -> a
    android.view.View getItem() -> getItem
    android.view.View getHeader() -> getHeader
    void update(android.view.View,android.view.View,android.graphics.drawable.Drawable,int) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
se.emilsjolander.stickylistheaders.WrapperViewList -> se.emilsjolander.stickylistheaders.v:
    se.emilsjolander.stickylistheaders.WrapperViewList$LifeCycleListener mLifeCycleListener -> a
    java.util.List mFooterViews -> b
    int mTopClippingLength -> c
    android.graphics.Rect mSelectorRect -> d
    java.lang.reflect.Field mSelectorPositionField -> e
    boolean mClippingToPadding -> f
    boolean mBlockLayoutChildren -> g
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void positionSelectorRect() -> b
    int getSelectorPosition() -> c
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void setLifeCycleListener(se.emilsjolander.stickylistheaders.WrapperViewList$LifeCycleListener) -> a
    void addFooterView(android.view.View) -> addFooterView
    void addFooterView(android.view.View,java.lang.Object,boolean) -> addFooterView
    void addInternalFooterView(android.view.View) -> b
    boolean removeFooterView(android.view.View) -> removeFooterView
    boolean containsFooterView(android.view.View) -> a
    void setTopClippingLength(int) -> a
    int getFixedFirstVisibleItem() -> a
    void setClipToPadding(boolean) -> setClipToPadding
    void setBlockLayoutChildren(boolean) -> a
    void layoutChildren() -> layoutChildren
se.emilsjolander.stickylistheaders.WrapperViewList$LifeCycleListener -> se.emilsjolander.stickylistheaders.w:
    void onDispatchDrawOccurred(android.graphics.Canvas) -> a
